<div class="JSControl UzCompositeControl FloatLeft Width-XS" id="defaultLayout" style="margin: 0px;" data-control-type="CommonChildDiv" data-obj="{&quot;fieldName&quot;:&quot;defaultLayout&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;CommonChildDiv&quot;,&quot;width&quot;:&quot;XS&quot;,&quot;visible&quot;:true,&quot;displayNone&quot;:false,&quot;disabled&quot;:false,&quot;accessKey&quot;:&quot;&quot;,&quot;nextFocusFieldName&quot;:&quot;&quot;,&quot;wrap&quot;:false,&quot;float&quot;:0,&quot;toolTip&quot;:&quot;&quot;,&quot;authorityMode&quot;:0,&quot;marginLeft&quot;:&quot;0px&quot;,&quot;marginRight&quot;:&quot;0px&quot;,&quot;selectControlID&quot;:&quot;defaultLayout&quot;,&quot;helpMessageID&quot;:&quot;&quot;,&quot;jpControlName&quot;:&quot;&quot;,&quot;authorityID&quot;:&quot;&quot;,&quot;packageName&quot;:&quot;KaigoUploadPanel&quot;,&quot;businessId&quot;:&quot;DBZ&quot;,&quot;controlName&quot;:&quot;KaigoUploadPanel&quot;,&quot;marginTop&quot;:&quot;0px&quot;,&quot;marginBottom&quot;:&quot;0px&quot;,&quot;dataPassingForDialog&quot;:[{&quot;key&quot;:&quot;Key_isSimpleModeKey&quot;,&quot;controlName&quot;:&quot;KaigoUploadPanel.hdnIsSimpleMode&quot;}],&quot;dialogOkEventNameForDialog&quot;:&quot;&quot;,&quot;dialogCancelEventNameForDialog&quot;:&quot;&quot;,&quot;dialogCloseEventNameForDialog&quot;:&quot;&quot;,&quot;heightForDialog&quot;:&quot;M&quot;,&quot;firstFocusFieldName&quot;:&quot;&quot;,&quot;lastFocusFieldName&quot;:&quot;&quot;,&quot;modes&quot;:[],&quot;publicEvents&quot;:[],&quot;publicEventsAlias&quot;:[],&quot;responsiveType&quot;:0,&quot;minWidth&quot;:&quot;&quot;,&quot;minHeight&quot;:&quot;&quot;,&quot;widthPercent&quot;:&quot;&quot;,&quot;heightPercent&quot;:&quot;&quot;,&quot;enterKeyAssignedControl&quot;:&quot;&quot;,&quot;EditTypes&quot;:{&quot;_editTypes&quot;:[]}}" data-is-composite-control="true" data-control-name="DBZ.KaigoUploadPanel"><div class="StateChangable UzPanel JSControl FloatLeft UzPanelAndText marginTop-Default panelMarginTop-M marginBottom-Default panelMarginBottom-M Panel-Shadow UzCommonChildDivPanel marginLeft-XS marginRight-XS Width-G1 UzCompositeChild" id="KaigoUploadPanel" style="width: auto; margin-top: 0px; margin-bottom: 0px;" data-control-type="Panel" data-obj="{&quot;fieldName&quot;:&quot;KaigoUploadPanel&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;Panel&quot;,&quot;width&quot;:&quot;G1&quot;,&quot;selectControlID&quot;:&quot;KaigoUploadPanel&quot;,&quot;title&quot;:&quot;対象ファイルを指定する&quot;,&quot;canOpenAndClose&quot;:false,&quot;postParameterPanelNames&quot;:[{&quot;postParameterPanelNames&quot;:&quot;KaigoUploadPanel&quot;}],&quot;requestSettings&quot;:[],&quot;hiddenInput&quot;:[{&quot;propertyName&quot;:&quot;hdnIsSimpleMode&quot;,&quot;value&quot;:&quot;&quot;}],&quot;session&quot;:{},&quot;canPost&quot;:true}"><div class="UzPanelHeader" id="KaigoUploadPanel_panel_header_area" style="display: block;"><span class="closeIconSpan ui-icon ui-icon-circle-close" style="display: none;"></span><span class="iconSpan ui-icon ui-icon-circle-triangle-n" style="visibility: hidden;"></span><span class="textSpan">対象ファイルを指定する</span><div class="groupBoxBorder" style="display: none;"></div></div><div class="UzPanelBody ui-widget-content panelPadding-M ui-droppable ui-sortable" id="KaigoUploadPanel_panel_body_area"><div class="UzUploadPanel text-align-right JSControl FloatLeft marginLeft-XS marginRight-XS controlMargin-M Width-L UzCompositeChild" id="uplUploadFile" style="opacity: 1;" data-control-type="UploadPanel" data-obj="{&quot;fieldName&quot;:&quot;uplUploadFile&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;UploadPanel&quot;,&quot;width&quot;:&quot;L&quot;,&quot;selectControlID&quot;:&quot;uplUploadFile&quot;,&quot;postParameterPanelNames&quot;:[],&quot;isSimpleMode&quot;:true}"><div class="SimpleSelectFileArea text-align-center" id="uplUploadFile_SimpleSelectFileArea"></div><button class="SelectButton isSimpleMode" id="uplUploadFile_SelectButton" type="button">参照</button><input class="HideFile" id="uplUploadFile_HideFile" style="display: none;" type="file"></div><span class="UzLabel word-wrap-break-word JSControl FloatLeft marginLeft-XS marginRight-XS controlMargin-M text-align-right ClearFloat UzCompositeChild" id="lblFileName" style="width: 200px;" data-control-type="Label" data-obj="{&quot;fieldName&quot;:&quot;lblFileName&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;Label&quot;,&quot;width&quot;:&quot;200px&quot;,&quot;wrap&quot;:true,&quot;selectControlID&quot;:&quot;lblFileName&quot;,&quot;text&quot;:&quot;アップロードファイル名：&quot;}"><span>アップロードファイル名：</span></span><span class="UzLabel word-wrap-break-word JSControl FloatLeft marginLeft-XS marginRight-XS controlMargin-M text-align-left UzCompositeChild" id="lblUploadFileName" style="width: 280px;" data-control-type="Label" data-obj="{&quot;fieldName&quot;:&quot;lblUploadFileName&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;Label&quot;,&quot;width&quot;:&quot;280px&quot;,&quot;selectControlID&quot;:&quot;lblUploadFileName&quot;,&quot;align&quot;:0}"></span><button class="UzButton JSControl controlMargin-M Width-S ClearFloat FloatRight marginLeft-XS marginRight-XS UzCompositeChild" id="btnUpload" type="button" data-control-type="Button" data-obj="{&quot;fieldName&quot;:&quot;btnUpload&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;Button&quot;,&quot;width&quot;:&quot;S&quot;,&quot;wrap&quot;:true,&quot;float&quot;:2,&quot;selectControlID&quot;:&quot;btnUpload&quot;,&quot;onClick&quot;:&quot;onClick_BtnUpload&quot;,&quot;text&quot;:&quot;アップロード&quot;}"><span>アップロード</span></button><button class="UzButton JSControl controlMargin-M Width-S ClearFloat FloatRight marginLeft-XS marginRight-XS UzCompositeChild" id="btnClose" type="button" data-control-type="Button" data-obj="{&quot;fieldName&quot;:&quot;btnClose&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;Button&quot;,&quot;width&quot;:&quot;S&quot;,&quot;wrap&quot;:true,&quot;float&quot;:2,&quot;selectControlID&quot;:&quot;btnClose&quot;,&quot;text&quot;:&quot;閉じる&quot;}"><span>閉じる</span></button></div></div>  
       
         
   <script class="RamlConvert" type="text/javascript">
var DBZ= DBZ? DBZ: {};
DBZ['KAIGOUPLOADPANEL'] = {};
DBZ['KAIGOUPLOADPANEL'].KaigoUploadPanelRequest = function(parentFieldName){ 
var paramArray = [];var parameter0 = Uz.JSControlUtil.getJSControl(parentFieldName + '_KaigoUploadPanel').getProperty();parameter0.uplUploadFile = Uz.JSControlUtil.getJSControl(parentFieldName + '_uplUploadFile').getProperty();parameter0.lblFileName = Uz.JSControlUtil.getJSControl(parentFieldName + '_lblFileName').getProperty();parameter0.lblUploadFileName = Uz.JSControlUtil.getJSControl(parentFieldName + '_lblUploadFileName').getProperty();parameter0.btnUpload = Uz.JSControlUtil.getJSControl(parentFieldName + '_btnUpload').getProperty();parameter0.btnClose = Uz.JSControlUtil.getJSControl(parentFieldName + '_btnClose').getProperty();paramArray.push(parameter0);
return paramArray;
 };
DBZ['KAIGOUPLOADPANEL'].uplUploadFileRequest = function(parentFieldName){ 
var paramArray = [];
return paramArray;
 };
</script><script>var DBZ;
(function (DBZ) {
    (function (KaigoUploadPanel) {
        var Events = (function () {
            function Events() {
            }
            Events.onClick_BtnUpload = function () {
                return "onClick_BtnUpload";
            };
            return Events;
        })();
        KaigoUploadPanel.Events = Events;

        var Controls = (function () {
            function Controls(fieldName) {
                this._myName = fieldName;
            }
            Controls.myType = function () {
                return "KaigoUploadPanel";
            };

            Controls.prototype.convFiledNameSelf = function () {
                return this._myName + "_" + DBZ.KaigoUploadPanel.Controls.myType();
            };

            Controls.prototype.convFiledName = function (fieldName) {
                return this._myName + "_" + DBZ.KaigoUploadPanel.Controls.myType() + "_" + fieldName;
            };

            Controls.prototype.KaigoUploadPanel = function () {
                return new UZA.Panel(this.convFiledNameSelf());
            };

            Controls.prototype.uplUploadFile = function () {
                return new UZA.UploadPanel(this.convFiledName("uplUploadFile"));
            };

            Controls.prototype.lblFileName = function () {
                return new UZA.Label(this.convFiledName("lblFileName"));
            };

            Controls.prototype.lblUploadFileName = function () {
                return new UZA.Label(this.convFiledName("lblUploadFileName"));
            };

            Controls.prototype.btnUpload = function () {
                return new UZA.Button(this.convFiledName("btnUpload"));
            };

            Controls.prototype.btnClose = function () {
                return new UZA.Button(this.convFiledName("btnClose"));
            };
            return Controls;
        })();
        KaigoUploadPanel.Controls = Controls;
    })(DBZ.KaigoUploadPanel || (DBZ.KaigoUploadPanel = {}));
    var KaigoUploadPanel = DBZ.KaigoUploadPanel;
})(DBZ || (DBZ = {}));
var DBZ;
(function (DBZ) {
    (function (KaigoUploadPanel) {
        var ModeController = (function () {
            function ModeController(fieldName) {
                this.fieldName = fieldName;
                this.controls = new KaigoUploadPanel.Controls(fieldName);
            }
            ModeController.prototype.Properties = function () {
                return new UZA.CommonChildDiv(this.fieldName);
            };

            ModeController.prototype.PublicProperties = function () {
                return new KaigoUploadPanel.PublicProperties(this.fieldName);
            };

            ModeController.prototype.priorities = function () {
                return [
                    "isSimpleMode"
                ];
            };

            ModeController.prototype.isSimpleMode = function () {
                return new Modes.isSimpleMode(this.controls);
            };
            return ModeController;
        })();
        KaigoUploadPanel.ModeController = ModeController;

        (function (Modes) {
            var isSimpleMode = (function () {
                function isSimpleMode(controls) {
                    this.controls = controls;
                }
                isSimpleMode.prototype.TRUE = function () {
                    this.controls.lblFileName().visible = true;
                    this.controls.lblUploadFileName().visible = true;
                };

                isSimpleMode.prototype.FALSE = function () {
                    this.controls.lblFileName().visible = false;
                    this.controls.lblUploadFileName().visible = false;
                };
                return isSimpleMode;
            })();
            Modes.isSimpleMode = isSimpleMode;
        })(KaigoUploadPanel.Modes || (KaigoUploadPanel.Modes = {}));
        var Modes = KaigoUploadPanel.Modes;
    })(DBZ.KaigoUploadPanel || (DBZ.KaigoUploadPanel = {}));
    var KaigoUploadPanel = DBZ.KaigoUploadPanel;
})(DBZ || (DBZ = {}));

var DBZ;
(function (DBZ) {
    (function (KaigoUploadPanel) {
        var PublicProperties = (function () {
            function PublicProperties(fieldName) {
                this.fieldName = fieldName;
                this.controls = new KaigoUploadPanel.Controls(fieldName);
            }
            PublicProperties.prototype.getEditTypes = function () {
                var editTypes = new UZA.EditTypeForPublicProperty();

                return editTypes;
            };
            return PublicProperties;
        })();
        KaigoUploadPanel.PublicProperties = PublicProperties;
    })(DBZ.KaigoUploadPanel || (DBZ.KaigoUploadPanel = {}));
    var KaigoUploadPanel = DBZ.KaigoUploadPanel;
})(DBZ || (DBZ = {}));
</script></div>
