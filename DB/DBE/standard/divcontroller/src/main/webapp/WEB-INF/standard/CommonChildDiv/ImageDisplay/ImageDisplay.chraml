<div class="JSControl UzCompositeControl FloatLeft Width-XS" id="defaultLayout" style="margin: 0px;" data-control-type="CommonChildDiv" data-obj="{&quot;fieldName&quot;:&quot;defaultLayout&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;CommonChildDiv&quot;,&quot;width&quot;:&quot;XS&quot;,&quot;visible&quot;:true,&quot;displayNone&quot;:false,&quot;disabled&quot;:false,&quot;accessKey&quot;:&quot;&quot;,&quot;nextFocusFieldName&quot;:&quot;&quot;,&quot;wrap&quot;:false,&quot;float&quot;:0,&quot;toolTip&quot;:&quot;&quot;,&quot;authorityMode&quot;:0,&quot;marginLeft&quot;:&quot;0px&quot;,&quot;marginRight&quot;:&quot;0px&quot;,&quot;selectControlID&quot;:&quot;defaultLayout&quot;,&quot;helpMessageID&quot;:&quot;&quot;,&quot;jpControlName&quot;:&quot;&quot;,&quot;authorityID&quot;:&quot;&quot;,&quot;packageName&quot;:&quot;ImageDisplay&quot;,&quot;businessId&quot;:&quot;DBE&quot;,&quot;controlName&quot;:&quot;ImageDisplay&quot;,&quot;marginTop&quot;:&quot;0px&quot;,&quot;marginBottom&quot;:&quot;0px&quot;,&quot;dataPassingForDialog&quot;:[],&quot;dialogOkEventNameForDialog&quot;:&quot;&quot;,&quot;dialogCancelEventNameForDialog&quot;:&quot;&quot;,&quot;dialogCloseEventNameForDialog&quot;:&quot;&quot;,&quot;heightForDialog&quot;:&quot;600px&quot;,&quot;firstFocusFieldName&quot;:&quot;&quot;,&quot;lastFocusFieldName&quot;:&quot;&quot;,&quot;modes&quot;:[],&quot;publicEvents&quot;:[],&quot;publicEventsAlias&quot;:[],&quot;responsiveType&quot;:0,&quot;minWidth&quot;:&quot;100px&quot;,&quot;minHeight&quot;:&quot;200px&quot;,&quot;widthPercent&quot;:&quot;80&quot;,&quot;heightPercent&quot;:&quot;80&quot;,&quot;enterKeyAssignedControl&quot;:&quot;&quot;,&quot;EditTypes&quot;:{&quot;_editTypes&quot;:[]}}" data-is-composite-control="true" data-control-name="DBE.ImageDisplay"><div class="StateChangable UzPanel JSControl FloatLeft UzPanelAndText marginTop-Default panelMarginTop-M marginBottom-Default panelMarginBottom-M marginLeft-Default marginRight-Default Panel-Shadow UzCommonChildDivPanel UzCompositeChild" id="ImageDisplay" style="width: 800px; margin-top: 0px; margin-bottom: 0px;" data-control-type="Panel" data-obj="{&quot;fieldName&quot;:&quot;ImageDisplay&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;Panel&quot;,&quot;width&quot;:&quot;800px&quot;,&quot;marginLeft&quot;:&quot;Default&quot;,&quot;marginRight&quot;:&quot;Default&quot;,&quot;selectControlID&quot;:&quot;ImageDisplay&quot;,&quot;title&quot;:&quot;イメージ&quot;,&quot;postParameterPanelNames&quot;:[{&quot;postParameterPanelNames&quot;:&quot;ImageDisplay&quot;}],&quot;requestSettings&quot;:[{&quot;eventName&quot;:&quot;onLoad&quot;,&quot;requestUrl&quot;:&quot;dbe/db/dbe/ImageDisplay/onLoad&quot;},{&quot;eventName&quot;:&quot;onActive&quot;,&quot;requestUrl&quot;:&quot;&quot;},{&quot;eventName&quot;:&quot;onClick_btnAfterImg&quot;,&quot;requestUrl&quot;:&quot;dbe/db/dbe/ImageDisplay/onClick_btnAfterImg&quot;},{&quot;eventName&quot;:&quot;onClick_btnBefore&quot;,&quot;requestUrl&quot;:&quot;dbe/db/dbe/ImageDisplay/onClick_btnBefore&quot;},{&quot;eventName&quot;:&quot;onClick_btnBack&quot;,&quot;requestUrl&quot;:&quot;dbe/db/dbe/ImageDisplay/onClick_btnBack&quot;}],&quot;hiddenInput&quot;:[{&quot;propertyName&quot;:&quot;HdnImageDisplay&quot;,&quot;value&quot;:&quot;&quot;}],&quot;session&quot;:{},&quot;widthAuto&quot;:false,&quot;canPost&quot;:true}"><div class="UzPanelHeader" id="ImageDisplay_panel_header_area" style="width: auto; display: block;"><span class="closeIconSpan ui-icon ui-icon-circle-close" style="display: none;"></span><span class="iconSpan ui-icon ui-icon-circle-triangle-n" style="visibility: visible;"></span><span class="textSpan">イメージ</span><div class="groupBoxBorder" style="display: none;"></div></div><div class="UzPanelBody ui-widget-content panelPadding-M ui-droppable ui-sortable" id="ImageDisplay_panel_body_area"><span class="UzLabel word-wrap-break-word JSControl FloatLeft marginLeft-XS marginRight-XS Width-XS controlMargin-M text-align-right UzCompositeChild" id="lblGenbon" data-control-type="Label" data-obj="{&quot;fieldName&quot;:&quot;lblGenbon&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;Label&quot;,&quot;selectControlID&quot;:&quot;lblGenbon&quot;,&quot;text&quot;:&quot;原本&quot;}"><span>原本</span></span><div class="WithLabel StaticImageOuterDiv JSControl FloatLeft marginLeft-XS marginRight-XS controlMargin-M UzCompositeChild" id="imgGenbon" style="width: 701px; height: 250px; position: relative;" data-control-type="StaticImage" data-obj="{&quot;fieldName&quot;:&quot;imgGenbon&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;StaticImage&quot;,&quot;width&quot;:&quot;701px&quot;,&quot;selectControlID&quot;:&quot;imgGenbon&quot;,&quot;imageWidth&quot;:&quot;700px&quot;,&quot;imageHeight&quot;:&quot;250px&quot;}"><img class="UzStaticImage CoreElement" id="imgGenbon_core" style="width: 700px; height: 250px;" alt="image"></div><span class="UzLabel word-wrap-break-word JSControl FloatLeft marginLeft-XS marginRight-XS Width-XS controlMargin-M text-align-right ClearFloat UzCompositeChild" id="lblMask" data-control-type="Label" data-obj="{&quot;fieldName&quot;:&quot;lblMask&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;Label&quot;,&quot;wrap&quot;:true,&quot;selectControlID&quot;:&quot;lblMask&quot;,&quot;text&quot;:&quot;マスク&quot;}"><span>マスク</span></span><div class="WithLabel StaticImageOuterDiv JSControl FloatLeft marginLeft-XS marginRight-XS controlMargin-M UzCompositeChild" id="imgMask" style="width: 701px; height: 250px; position: relative;" data-control-type="StaticImage" data-obj="{&quot;fieldName&quot;:&quot;imgMask&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;StaticImage&quot;,&quot;width&quot;:&quot;701px&quot;,&quot;selectControlID&quot;:&quot;imgMask&quot;,&quot;imageWidth&quot;:&quot;700px&quot;,&quot;imageHeight&quot;:&quot;250px&quot;}"><img class="UzStaticImage CoreElement" id="imgMask_core" style="width: 700px; height: 250px;" alt="image"></div><button class="UzButton JSControl FloatLeft controlMargin-M marginLeft-XS marginRight-XS ClearFloat Width-XS UzCompositeChild" id="btnBefore" type="button" data-control-type="Button" data-obj="{&quot;fieldName&quot;:&quot;btnBefore&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;Button&quot;,&quot;wrap&quot;:true,&quot;selectControlID&quot;:&quot;btnBefore&quot;,&quot;onClick&quot;:&quot;onClick_btnBefore&quot;,&quot;text&quot;:&quot;前へ&quot;}"><span>前へ</span></button><button class="UzButton JSControl controlMargin-M Width-XS FloatRight marginLeft-XS marginRight-XS UzCompositeChild" id="btnBack" type="button" data-control-type="Button" data-obj="{&quot;fieldName&quot;:&quot;btnBack&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;Button&quot;,&quot;float&quot;:2,&quot;selectControlID&quot;:&quot;btnBack&quot;,&quot;onClick&quot;:&quot;onClick_btnBack&quot;,&quot;text&quot;:&quot;戻る&quot;}"><span>戻る</span></button><button class="UzButton JSControl FloatLeft controlMargin-M marginLeft-XS marginRight-XS Width-XS UzCompositeChild" id="btnAfterImg" type="button" data-control-type="Button" data-obj="{&quot;fieldName&quot;:&quot;btnAfterImg&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;Button&quot;,&quot;selectControlID&quot;:&quot;btnAfterImg&quot;,&quot;onClick&quot;:&quot;onClick_btnAfterImg&quot;,&quot;text&quot;:&quot;次へ&quot;}"><span>次へ</span></button></div></div>        
   
   
   
       
   
                   
       
         
   
         <script class="RamlConvert" type="text/javascript">
var DBE= DBE? DBE: {};
DBE['IMAGEDISPLAY'] = {};
DBE['IMAGEDISPLAY'].ImageDisplayRequest = function(parentFieldName){ 
var paramArray = [];var parameter0 = Uz.JSControlUtil.getJSControl(parentFieldName + '_ImageDisplay').getProperty();parameter0.lblGenbon = Uz.JSControlUtil.getJSControl(parentFieldName + '_lblGenbon').getProperty();parameter0.imgGenbon = Uz.JSControlUtil.getJSControl(parentFieldName + '_imgGenbon').getProperty();parameter0.lblMask = Uz.JSControlUtil.getJSControl(parentFieldName + '_lblMask').getProperty();parameter0.imgMask = Uz.JSControlUtil.getJSControl(parentFieldName + '_imgMask').getProperty();parameter0.btnBefore = Uz.JSControlUtil.getJSControl(parentFieldName + '_btnBefore').getProperty();parameter0.btnBack = Uz.JSControlUtil.getJSControl(parentFieldName + '_btnBack').getProperty();parameter0.btnAfterImg = Uz.JSControlUtil.getJSControl(parentFieldName + '_btnAfterImg').getProperty();paramArray.push(parameter0);
return paramArray;
 };
</script><script>var DBE;
(function (DBE) {
    (function (ImageDisplay) {
        var Events = (function () {
            function Events() {
            }
            Events.onClick_btnBefore = function () {
                return "onClick_btnBefore";
            };

            Events.onClick_btnBack = function () {
                return "onClick_btnBack";
            };

            Events.onClick_btnAfterImg = function () {
                return "onClick_btnAfterImg";
            };
            return Events;
        })();
        ImageDisplay.Events = Events;

        var Controls = (function () {
            function Controls(fieldName) {
                this._myName = fieldName;
            }
            Controls.myType = function () {
                return "ImageDisplay";
            };

            Controls.prototype.convFiledNameSelf = function () {
                return this._myName + "_" + DBE.ImageDisplay.Controls.myType();
            };

            Controls.prototype.convFiledName = function (fieldName) {
                return this._myName + "_" + DBE.ImageDisplay.Controls.myType() + "_" + fieldName;
            };

            Controls.prototype.ImageDisplay = function () {
                return new UZA.Panel(this.convFiledNameSelf());
            };

            Controls.prototype.lblGenbon = function () {
                return new UZA.Label(this.convFiledName("lblGenbon"));
            };

            Controls.prototype.imgGenbon = function () {
                return new UZA.StaticImage(this.convFiledName("imgGenbon"));
            };

            Controls.prototype.lblMask = function () {
                return new UZA.Label(this.convFiledName("lblMask"));
            };

            Controls.prototype.imgMask = function () {
                return new UZA.StaticImage(this.convFiledName("imgMask"));
            };

            Controls.prototype.btnBefore = function () {
                return new UZA.Button(this.convFiledName("btnBefore"));
            };

            Controls.prototype.btnBack = function () {
                return new UZA.Button(this.convFiledName("btnBack"));
            };

            Controls.prototype.btnAfterImg = function () {
                return new UZA.Button(this.convFiledName("btnAfterImg"));
            };
            return Controls;
        })();
        ImageDisplay.Controls = Controls;
    })(DBE.ImageDisplay || (DBE.ImageDisplay = {}));
    var ImageDisplay = DBE.ImageDisplay;
})(DBE || (DBE = {}));
var DBE;
(function (DBE) {
    (function (ImageDisplay) {
        var ModeController = (function () {
            function ModeController(fieldName) {
                this.fieldName = fieldName;
                this.controls = new ImageDisplay.Controls(fieldName);
            }
            ModeController.prototype.Properties = function () {
                return new UZA.CommonChildDiv(this.fieldName);
            };

            ModeController.prototype.PublicProperties = function () {
                return new ImageDisplay.PublicProperties(this.fieldName);
            };
            return ModeController;
        })();
        ImageDisplay.ModeController = ModeController;
    })(DBE.ImageDisplay || (DBE.ImageDisplay = {}));
    var ImageDisplay = DBE.ImageDisplay;
})(DBE || (DBE = {}));

var DBE;
(function (DBE) {
    (function (ImageDisplay) {
        var PublicProperties = (function () {
            function PublicProperties(fieldName) {
                this.fieldName = fieldName;
                this.controls = new ImageDisplay.Controls(fieldName);
            }
            PublicProperties.prototype.getEditTypes = function () {
                var editTypes = new UZA.EditTypeForPublicProperty();

                return editTypes;
            };
            return PublicProperties;
        })();
        ImageDisplay.PublicProperties = PublicProperties;
    })(DBE.ImageDisplay || (DBE.ImageDisplay = {}));
    var ImageDisplay = DBE.ImageDisplay;
})(DBE || (DBE = {}));
</script></div>
