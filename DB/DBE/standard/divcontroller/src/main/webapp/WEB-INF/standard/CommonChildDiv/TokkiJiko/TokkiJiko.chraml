<div class="JSControl UzCompositeControl FloatLeft Width-XS" id="defaultLayout" style="margin: 0px;" data-control-type="CommonChildDiv" data-obj="{&quot;fieldName&quot;:&quot;defaultLayout&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;CommonChildDiv&quot;,&quot;width&quot;:&quot;XS&quot;,&quot;visible&quot;:true,&quot;displayNone&quot;:false,&quot;disabled&quot;:false,&quot;accessKey&quot;:&quot;&quot;,&quot;nextFocusFieldName&quot;:&quot;&quot;,&quot;wrap&quot;:false,&quot;float&quot;:0,&quot;toolTip&quot;:&quot;&quot;,&quot;authorityMode&quot;:0,&quot;marginLeft&quot;:&quot;0px&quot;,&quot;marginRight&quot;:&quot;0px&quot;,&quot;selectControlID&quot;:&quot;defaultLayout&quot;,&quot;helpMessageID&quot;:&quot;&quot;,&quot;jpControlName&quot;:&quot;&quot;,&quot;authorityID&quot;:&quot;&quot;,&quot;packageName&quot;:&quot;TokkiJiko&quot;,&quot;businessId&quot;:&quot;DBE&quot;,&quot;controlName&quot;:&quot;TokkiJiko&quot;,&quot;marginTop&quot;:&quot;0px&quot;,&quot;marginBottom&quot;:&quot;0px&quot;,&quot;dataPassingForDialog&quot;:[{&quot;key&quot;:&quot;TokkiJikoModel&quot;,&quot;controlName&quot;:&quot;TokkiJiko.TokkiJikoModel&quot;}],&quot;dialogOkEventNameForDialog&quot;:&quot;&quot;,&quot;dialogCancelEventNameForDialog&quot;:&quot;&quot;,&quot;dialogCloseEventNameForDialog&quot;:&quot;&quot;,&quot;heightForDialog&quot;:&quot;600px&quot;,&quot;firstFocusFieldName&quot;:&quot;&quot;,&quot;lastFocusFieldName&quot;:&quot;&quot;,&quot;modes&quot;:[],&quot;publicEvents&quot;:[],&quot;publicEventsAlias&quot;:[],&quot;responsiveType&quot;:0,&quot;minWidth&quot;:&quot;&quot;,&quot;minHeight&quot;:&quot;&quot;,&quot;widthPercent&quot;:&quot;&quot;,&quot;heightPercent&quot;:&quot;&quot;,&quot;enterKeyAssignedControl&quot;:&quot;&quot;,&quot;EditTypes&quot;:{&quot;_editTypes&quot;:[]}}" data-is-composite-control="true" data-control-name="DBE.TokkiJiko"><div class="StateChangable UzPanel JSControl FloatLeft UzPanelAndText marginTop-Default panelMarginTop-M marginBottom-Default panelMarginBottom-M marginLeft-Default marginRight-Default Panel-Shadow UzCommonChildDivPanel UzCompositeChild" id="TokkiJiko" style="width: 820px; margin-top: 0px; margin-bottom: 0px;" data-control-type="Panel" data-obj="{&quot;fieldName&quot;:&quot;TokkiJiko&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;Panel&quot;,&quot;width&quot;:&quot;820px&quot;,&quot;marginLeft&quot;:&quot;Default&quot;,&quot;marginRight&quot;:&quot;Default&quot;,&quot;selectControlID&quot;:&quot;TokkiJiko&quot;,&quot;title&quot;:&quot;特記すべき事項&quot;,&quot;postParameterPanelNames&quot;:[{&quot;postParameterPanelNames&quot;:&quot;TokkiJiko&quot;}],&quot;requestSettings&quot;:[{&quot;eventName&quot;:&quot;onLoad&quot;,&quot;requestUrl&quot;:&quot;dbe/db/dbe/TokkiJiko/onLoad&quot;},{&quot;eventName&quot;:&quot;onActive&quot;,&quot;requestUrl&quot;:&quot;&quot;},{&quot;eventName&quot;:&quot;onClick_KakuTeyi&quot;,&quot;requestUrl&quot;:&quot;dbe/db/dbe/TokkiJiko/onClick_KakuTeyi&quot;},{&quot;eventName&quot;:&quot;onClick_ToriKesi&quot;,&quot;requestUrl&quot;:&quot;dbe/db/dbe/TokkiJiko/onClick_ToriKesi&quot;}],&quot;hiddenInput&quot;:[{&quot;propertyName&quot;:&quot;hdnTokkiJiko&quot;,&quot;value&quot;:&quot;&quot;}],&quot;session&quot;:{},&quot;widthAuto&quot;:false,&quot;canPost&quot;:true}"><div class="UzPanelHeader" id="TokkiJiko_panel_header_area" style="width: auto; display: block;"><span class="closeIconSpan ui-icon ui-icon-circle-close" style="display: none;"></span><span class="iconSpan ui-icon ui-icon-circle-triangle-n" style="visibility: visible;"></span><span class="textSpan">特記すべき事項</span><div class="groupBoxBorder" style="display: none;"></div></div><div class="UzPanelBody ui-widget-content panelPadding-M ui-droppable ui-sortable" id="TokkiJiko_panel_body_area"><span class="UzLabel word-wrap-break-word JSControl FloatLeft marginLeft-XS marginRight-XS controlMargin-M text-align-left UzCompositeChild" id="lblTokki" style="width: 800px; opacity: 1;" data-control-type="Label" data-obj="{&quot;fieldName&quot;:&quot;lblTokki&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;Label&quot;,&quot;width&quot;:&quot;800px&quot;,&quot;selectControlID&quot;:&quot;lblTokki&quot;,&quot;text&quot;:&quot;要介護認定及び介護サービス計画作成時に必要な医学的なご意見を記載して下さい。<br>なお、専門医等に別途意見を求めた場合はその内容、結果も記載して下さい。<br>（情報提供書や身体障害者申請診断書の写し等を添付して頂いても結構です。）&quot;,&quot;align&quot;:0}"><span>要介護認定及び介護サービス計画作成時に必要な医学的なご意見を記載して下さい。</span><br><span>なお、専門医等に別途意見を求めた場合はその内容、結果も記載して下さい。</span><br><span>（情報提供書や身体障害者申請診断書の写し等を添付して頂いても結構です。）</span></span><div class="UzTextBoxMultiLine TextBoxOuterDiv WithLabel JSControl FloatLeft marginLeft-XS marginRight-XS controlMargin-M UzCompositeChild" id="txtTokki" style="width: 703px; height: 321px; position: relative;" data-control-type="TextBoxMultiLine" data-obj="{&quot;fieldName&quot;:&quot;txtTokki&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;TextBoxMultiLine&quot;,&quot;width&quot;:&quot;630px&quot;,&quot;selectControlID&quot;:&quot;txtTokki_text_area&quot;,&quot;height&quot;:&quot;300px&quot;,&quot;labelLText&quot;:&quot;特記事項&quot;,&quot;labelLWidth&quot;:&quot;66px&quot;,&quot;maxLength&quot;:&quot;400&quot;}"><span class="word-wrap-break-word Label-L text-align-right" id="txtTokki_labelL" style="width: 66px; vertical-align: top;"><span>特記事項</span></span><span class="CoreElement UzTextBox" id="txtTokki_core" style="width: 630px;"><textarea class="UzTextBox UzTextBoxMultiLine DispJcountLine" id="txtTokki_text_area" style="width: 633.9px; height: 304px;" type="text" data-control-type="TextBoxMultiLine"></textarea></span><div class="UzTextBoxMultiLineCountDiv" id="txtTokki_text_countDiv"><span class="word-wrap-break-word Label-L text-align-right" id="TextBoxMultiLine1_labelL_count" style="width: 66px;"></span><span class="UzTextBoxMultiLine" id="txtTokki_text_count">残り400文字</span></div></div><button class="UzButton JSControl controlMargin-M FloatRight marginLeft-XS marginRight-XS Width-S UzCompositeChild" id="btnCancel" style="opacity: 0.8;" type="button" data-control-type="Button" data-obj="{&quot;fieldName&quot;:&quot;btnCancel&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;Button&quot;,&quot;width&quot;:&quot;S&quot;,&quot;float&quot;:2,&quot;selectControlID&quot;:&quot;btnCancel&quot;,&quot;onClick&quot;:&quot;onClick_ToriKesi&quot;,&quot;text&quot;:&quot;取消&quot;,&quot;isValidateUsable&quot;:true}"><span>取消</span></button><button class="UzButton JSControl controlMargin-M Width-S FloatRight marginLeft-XS marginRight-XS UzCompositeChild" id="btnKakutei" type="button" data-control-type="Button" data-obj="{&quot;fieldName&quot;:&quot;btnKakutei&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;Button&quot;,&quot;width&quot;:&quot;S&quot;,&quot;float&quot;:2,&quot;selectControlID&quot;:&quot;btnKakutei&quot;,&quot;onClick&quot;:&quot;onClick_KakuTeyi&quot;,&quot;text&quot;:&quot;確定&quot;}"><span>確定</span></button></div></div>        
       
     
     
       
   
   
       
       
     
   
   
       
   
     
     
   
   
   
   
     
   <script class="RamlConvert" type="text/javascript">
var DBE= DBE? DBE: {};
DBE['TOKKIJIKO'] = {};
DBE['TOKKIJIKO'].TokkiJikoRequest = function(parentFieldName){ 
var paramArray = [];var parameter0 = Uz.JSControlUtil.getJSControl(parentFieldName + '_TokkiJiko').getProperty();parameter0.lblTokki = Uz.JSControlUtil.getJSControl(parentFieldName + '_lblTokki').getProperty();parameter0.txtTokki = Uz.JSControlUtil.getJSControl(parentFieldName + '_txtTokki').getProperty();parameter0.btnCancel = Uz.JSControlUtil.getJSControl(parentFieldName + '_btnCancel').getProperty();parameter0.btnKakutei = Uz.JSControlUtil.getJSControl(parentFieldName + '_btnKakutei').getProperty();paramArray.push(parameter0);
return paramArray;
 };
</script><script>var DBE;
(function (DBE) {
    (function (TokkiJiko) {
        var Events = (function () {
            function Events() {
            }
            Events.onClick_ToriKesi = function () {
                return "onClick_ToriKesi";
            };

            Events.onClick_KakuTeyi = function () {
                return "onClick_KakuTeyi";
            };
            return Events;
        })();
        TokkiJiko.Events = Events;

        var Controls = (function () {
            function Controls(fieldName) {
                this._myName = fieldName;
            }
            Controls.myType = function () {
                return "TokkiJiko";
            };

            Controls.prototype.convFiledNameSelf = function () {
                return this._myName + "_" + DBE.TokkiJiko.Controls.myType();
            };

            Controls.prototype.convFiledName = function (fieldName) {
                return this._myName + "_" + DBE.TokkiJiko.Controls.myType() + "_" + fieldName;
            };

            Controls.prototype.TokkiJiko = function () {
                return new UZA.Panel(this.convFiledNameSelf());
            };

            Controls.prototype.lblTokki = function () {
                return new UZA.Label(this.convFiledName("lblTokki"));
            };

            Controls.prototype.txtTokki = function () {
                return new UZA.TextBoxMultiLine(this.convFiledName("txtTokki"));
            };

            Controls.prototype.btnCancel = function () {
                return new UZA.Button(this.convFiledName("btnCancel"));
            };

            Controls.prototype.btnKakutei = function () {
                return new UZA.Button(this.convFiledName("btnKakutei"));
            };
            return Controls;
        })();
        TokkiJiko.Controls = Controls;
    })(DBE.TokkiJiko || (DBE.TokkiJiko = {}));
    var TokkiJiko = DBE.TokkiJiko;
})(DBE || (DBE = {}));
var DBE;
(function (DBE) {
    (function (TokkiJiko) {
        var ModeController = (function () {
            function ModeController(fieldName) {
                this.fieldName = fieldName;
                this.controls = new TokkiJiko.Controls(fieldName);
            }
            ModeController.prototype.Properties = function () {
                return new UZA.CommonChildDiv(this.fieldName);
            };

            ModeController.prototype.PublicProperties = function () {
                return new TokkiJiko.PublicProperties(this.fieldName);
            };
            return ModeController;
        })();
        TokkiJiko.ModeController = ModeController;
    })(DBE.TokkiJiko || (DBE.TokkiJiko = {}));
    var TokkiJiko = DBE.TokkiJiko;
})(DBE || (DBE = {}));

var DBE;
(function (DBE) {
    (function (TokkiJiko) {
        var PublicProperties = (function () {
            function PublicProperties(fieldName) {
                this.fieldName = fieldName;
                this.controls = new TokkiJiko.Controls(fieldName);
            }
            PublicProperties.prototype.getEditTypes = function () {
                var editTypes = new UZA.EditTypeForPublicProperty();

                return editTypes;
            };
            return PublicProperties;
        })();
        TokkiJiko.PublicProperties = PublicProperties;
    })(DBE.TokkiJiko || (DBE.TokkiJiko = {}));
    var TokkiJiko = DBE.TokkiJiko;
})(DBE || (DBE = {}));
</script></div>
