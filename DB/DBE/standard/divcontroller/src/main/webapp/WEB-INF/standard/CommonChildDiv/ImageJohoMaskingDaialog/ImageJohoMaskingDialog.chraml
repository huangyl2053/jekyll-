<div class="JSControl UzCompositeControl FloatLeft Width-XS" id="defaultLayout" style="margin: 0px;" data-control-type="CommonChildDiv" data-obj="{&quot;fieldName&quot;:&quot;defaultLayout&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;CommonChildDiv&quot;,&quot;width&quot;:&quot;XS&quot;,&quot;visible&quot;:true,&quot;displayNone&quot;:false,&quot;disabled&quot;:false,&quot;accessKey&quot;:&quot;&quot;,&quot;nextFocusFieldName&quot;:&quot;&quot;,&quot;wrap&quot;:false,&quot;float&quot;:0,&quot;toolTip&quot;:&quot;&quot;,&quot;authorityMode&quot;:0,&quot;marginLeft&quot;:&quot;0px&quot;,&quot;marginRight&quot;:&quot;0px&quot;,&quot;selectControlID&quot;:&quot;defaultLayout&quot;,&quot;helpMessageID&quot;:&quot;&quot;,&quot;jpControlName&quot;:&quot;&quot;,&quot;authorityID&quot;:&quot;&quot;,&quot;packageName&quot;:&quot;ImageJohoMaskingDaialog&quot;,&quot;businessId&quot;:&quot;DBE&quot;,&quot;controlName&quot;:&quot;ImageJohoMaskingDialog&quot;,&quot;marginTop&quot;:&quot;0px&quot;,&quot;marginBottom&quot;:&quot;0px&quot;,&quot;dataPassingForDialog&quot;:[{&quot;key&quot;:&quot;hiddenImagePath&quot;,&quot;controlName&quot;:&quot;ImageJohoMaskingDialog.hiddenImagePath&quot;}],&quot;dialogOkEventNameForDialog&quot;:&quot;&quot;,&quot;dialogCancelEventNameForDialog&quot;:&quot;onClick_btnTorikeshi&quot;,&quot;dialogCloseEventNameForDialog&quot;:&quot;onClick_btnTorikeshi&quot;,&quot;heightForDialog&quot;:&quot;800px&quot;,&quot;firstFocusFieldName&quot;:&quot;&quot;,&quot;lastFocusFieldName&quot;:&quot;&quot;,&quot;modes&quot;:[],&quot;publicEvents&quot;:[],&quot;publicEventsAlias&quot;:[],&quot;responsiveType&quot;:0,&quot;minWidth&quot;:&quot;100px&quot;,&quot;minHeight&quot;:&quot;200px&quot;,&quot;widthPercent&quot;:&quot;80&quot;,&quot;heightPercent&quot;:&quot;80&quot;,&quot;enterKeyAssignedControl&quot;:&quot;&quot;,&quot;EditTypes&quot;:{&quot;_editTypes&quot;:[]}}" data-control-name="DBE.ImageJohoMaskingDialog" data-is-composite-control="true"><div class="StateChangable UzPanel JSControl FloatLeft UzPanelAndText marginTop-Default panelMarginTop-M marginBottom-Default panelMarginBottom-M marginLeft-Default marginRight-Default Panel-Shadow UzCommonChildDivPanel Width-G1 UzCompositeChild" id="ImageJohoMaskingDialog" style="width: auto; margin-top: 0px; margin-bottom: 0px;" data-control-type="Panel" data-obj="{&quot;fieldName&quot;:&quot;ImageJohoMaskingDialog&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;Panel&quot;,&quot;width&quot;:&quot;G1&quot;,&quot;marginLeft&quot;:&quot;Default&quot;,&quot;marginRight&quot;:&quot;Default&quot;,&quot;selectControlID&quot;:&quot;ImageJohoMaskingDialog&quot;,&quot;title&quot;:&quot;マスキング処理&quot;,&quot;canOpenAndClose&quot;:false,&quot;postParameterPanelNames&quot;:[{&quot;postParameterPanelNames&quot;:&quot;ImageJohoMaskingDialog&quot;}],&quot;requestSettings&quot;:[{&quot;eventName&quot;:&quot;onLoad&quot;,&quot;requestUrl&quot;:&quot;dbe/db/dbe/ImageJohoMaskingDialog/onLoad&quot;},{&quot;eventName&quot;:&quot;onActive&quot;,&quot;requestUrl&quot;:&quot;&quot;},{&quot;eventName&quot;:&quot;onClick_btnSave&quot;,&quot;requestUrl&quot;:&quot;dbe/db/dbe/ImageJohoMaskingDialog/onClick_btnHozon&quot;},{&quot;eventName&quot;:&quot;onClick_btnTorikeshi&quot;,&quot;requestUrl&quot;:&quot;dbe/db/dbe/ImageJohoMaskingDialog/onClick_btnTorikeshi&quot;}],&quot;hiddenInput&quot;:[{&quot;propertyName&quot;:&quot;hiddenImagePath&quot;,&quot;value&quot;:&quot;&quot;}],&quot;session&quot;:{},&quot;height&quot;:&quot;XL&quot;,&quot;canPost&quot;:true}"><div class="UzPanelHeader" id="ImageJohoMaskingDialog_panel_header_area" style="display: block;"><span class="closeIconSpan ui-icon ui-icon-circle-close" style="display: none;"></span><span class="iconSpan ui-icon ui-icon-circle-triangle-n" style="visibility: hidden;"></span><span class="textSpan">マスキング処理</span><div class="groupBoxBorder" style="display: none;"></div></div><div class="UzPanelBody ui-widget-content panelPadding-M ui-droppable ui-sortable PanelHeight-XL" id="ImageJohoMaskingDialog_panel_body_area"><div class="JSControl UzCompositeControl FloatLeft Width-XS" id="ccdImageMasking" style="margin: 0px;" data-control-type="CommonChildDiv" data-obj="{&quot;fieldName&quot;:&quot;ccdImageMasking&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;CommonChildDiv&quot;,&quot;width&quot;:&quot;XS&quot;,&quot;visible&quot;:true,&quot;displayNone&quot;:false,&quot;disabled&quot;:false,&quot;accessKey&quot;:&quot;&quot;,&quot;nextFocusFieldName&quot;:&quot;&quot;,&quot;wrap&quot;:false,&quot;float&quot;:0,&quot;toolTip&quot;:&quot;&quot;,&quot;authorityMode&quot;:0,&quot;marginLeft&quot;:&quot;0px&quot;,&quot;marginRight&quot;:&quot;0px&quot;,&quot;selectControlID&quot;:&quot;ccdImageMasking&quot;,&quot;helpMessageID&quot;:&quot;&quot;,&quot;jpControlName&quot;:&quot;&quot;,&quot;authorityID&quot;:&quot;&quot;,&quot;packageName&quot;:&quot;&quot;,&quot;businessId&quot;:&quot;UZI&quot;,&quot;controlName&quot;:&quot;ImageMasking&quot;,&quot;marginTop&quot;:&quot;0px&quot;,&quot;marginBottom&quot;:&quot;0px&quot;,&quot;dataPassingForDialog&quot;:[],&quot;dialogOkEventNameForDialog&quot;:&quot;onSave&quot;,&quot;dialogCancelEventNameForDialog&quot;:&quot;onCancel&quot;,&quot;dialogCloseEventNameForDialog&quot;:&quot;&quot;,&quot;heightForDialog&quot;:&quot;M&quot;,&quot;firstFocusFieldName&quot;:&quot;&quot;,&quot;lastFocusFieldName&quot;:&quot;&quot;,&quot;modes&quot;:[],&quot;publicEvents&quot;:[{&quot;eventName&quot;:&quot;onSave&quot;},{&quot;eventName&quot;:&quot;onCancel&quot;}],&quot;publicEventsAlias&quot;:[],&quot;responsiveType&quot;:0,&quot;minWidth&quot;:&quot;100px&quot;,&quot;minHeight&quot;:&quot;200px&quot;,&quot;widthPercent&quot;:&quot;80&quot;,&quot;heightPercent&quot;:&quot;80&quot;,&quot;enterKeyAssignedControl&quot;:&quot;&quot;}" data-control-name="UZI.ImageMasking" data-is-composite-control="true"></div><button class="UzButton JSControl controlMargin-M Width-S FloatRight marginLeft-XS marginRight-XS ClearFloat UzCompositeChild" id="btnTorikeshi" type="button" data-control-type="Button" data-obj="{&quot;fieldName&quot;:&quot;btnTorikeshi&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;Button&quot;,&quot;width&quot;:&quot;S&quot;,&quot;wrap&quot;:true,&quot;float&quot;:2,&quot;selectControlID&quot;:&quot;btnTorikeshi&quot;,&quot;onClick&quot;:&quot;onClick_btnTorikeshi&quot;,&quot;text&quot;:&quot;取消&quot;}"><span>取消</span></button><button class="UzButton JSControl controlMargin-M Width-S FloatRight marginLeft-XS marginRight-XS UzCompositeChild" id="btnHozon" style="display: block;" type="button" data-control-type="Button" data-obj="{&quot;fieldName&quot;:&quot;btnHozon&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;Button&quot;,&quot;width&quot;:&quot;S&quot;,&quot;float&quot;:2,&quot;selectControlID&quot;:&quot;btnHozon&quot;,&quot;onClick&quot;:&quot;onClick_btnHozon&quot;,&quot;text&quot;:&quot;確定する&quot;}"><span>確定する</span></button><button class="UzButton JSControl controlMargin-M FloatRight marginLeft-XS marginRight-XS Width-S UzCompositeChild" id="btnSave" type="button" data-control-type="Button" data-obj="{&quot;fieldName&quot;:&quot;btnSave&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;Button&quot;,&quot;width&quot;:&quot;S&quot;,&quot;displayNone&quot;:true,&quot;float&quot;:2,&quot;selectControlID&quot;:&quot;btnSave&quot;,&quot;onClick&quot;:&quot;onClick_btnSave&quot;,&quot;text&quot;:&quot;実保存&quot;}"><span>実保存</span></button></div></div>          
     
     
       
     
   
     
   
           
   
             
   
   
       
           
   
           
         
     
   
   <script class="RamlConvert" type="text/javascript">
var DBE= DBE? DBE: {};
DBE['IMAGEJOHOMASKINGDIALOG'] = {};
DBE['IMAGEJOHOMASKINGDIALOG'].ImageJohoMaskingDialogRequest = function(parentFieldName){ 
var paramArray = [];var parameter0 = Uz.JSControlUtil.getJSControl(parentFieldName + '_ImageJohoMaskingDialog').getProperty();parameter0.ccdImageMasking = Uz.JSControlUtil.getJSControl(parentFieldName + '_ccdImageMasking').getPostParameter();parameter0.btnTorikeshi = Uz.JSControlUtil.getJSControl(parentFieldName + '_btnTorikeshi').getProperty();parameter0.btnHozon = Uz.JSControlUtil.getJSControl(parentFieldName + '_btnHozon').getProperty();parameter0.btnSave = Uz.JSControlUtil.getJSControl(parentFieldName + '_btnSave').getProperty();paramArray.push(parameter0);
return paramArray;
 };
</script><script>var DBE;
(function (DBE) {
    (function (ImageJohoMaskingDialog) {
        var Events = (function () {
            function Events() {
            }
            Events.onClick_btnTorikeshi = function () {
                return "onClick_btnTorikeshi";
            };

            Events.onClick_btnHozon = function () {
                return "onClick_btnHozon";
            };

            Events.onClick_btnSave = function () {
                return "onClick_btnSave";
            };
            return Events;
        })();
        ImageJohoMaskingDialog.Events = Events;

        var Controls = (function () {
            function Controls(fieldName) {
                this._myName = fieldName;
            }
            Controls.myType = function () {
                return "ImageJohoMaskingDialog";
            };

            Controls.prototype.convFiledNameSelf = function () {
                return this._myName + "_" + DBE.ImageJohoMaskingDialog.Controls.myType();
            };

            Controls.prototype.convFiledName = function (fieldName) {
                return this._myName + "_" + DBE.ImageJohoMaskingDialog.Controls.myType() + "_" + fieldName;
            };

            Controls.prototype.ImageJohoMaskingDialog = function () {
                return new UZA.Panel(this.convFiledNameSelf());
            };

            Controls.prototype.ccdImageMasking = function () {
                return new UZI.ImageMasking.ModeController(this.convFiledName("ccdImageMasking"));
            };

            Controls.prototype.btnTorikeshi = function () {
                return new UZA.Button(this.convFiledName("btnTorikeshi"));
            };

            Controls.prototype.btnHozon = function () {
                return new UZA.Button(this.convFiledName("btnHozon"));
            };

            Controls.prototype.btnSave = function () {
                return new UZA.Button(this.convFiledName("btnSave"));
            };
            return Controls;
        })();
        ImageJohoMaskingDialog.Controls = Controls;
    })(DBE.ImageJohoMaskingDialog || (DBE.ImageJohoMaskingDialog = {}));
    var ImageJohoMaskingDialog = DBE.ImageJohoMaskingDialog;
})(DBE || (DBE = {}));
var DBE;
(function (DBE) {
    (function (ImageJohoMaskingDialog) {
        var ModeController = (function () {
            function ModeController(fieldName) {
                this.fieldName = fieldName;
                this.controls = new ImageJohoMaskingDialog.Controls(fieldName);
                Uz.GyomuJSHelper.registOriginalEvent(DBE.ImageJohoMaskingDialog.Events.onClick_btnHozon(), function (control) {
                    UZI.ImageMasking.EventScripts.beforeClick();
                    $("#" + Uz.JSControlUtil.getJSControl("btnSave").fieldName).click();
                });
            }
            ModeController.prototype.Properties = function () {
                return new UZA.CommonChildDiv(this.fieldName);
            };

            ModeController.prototype.PublicProperties = function () {
                return new ImageJohoMaskingDialog.PublicProperties(this.fieldName);
            };
            return ModeController;
        })();
        ImageJohoMaskingDialog.ModeController = ModeController;
    })(DBE.ImageJohoMaskingDialog || (DBE.ImageJohoMaskingDialog = {}));
    var ImageJohoMaskingDialog = DBE.ImageJohoMaskingDialog;
})(DBE || (DBE = {}));

var DBE;
(function (DBE) {
    (function (ImageJohoMaskingDialog) {
        var PublicProperties = (function () {
            function PublicProperties(fieldName) {
                this.fieldName = fieldName;
                this.controls = new ImageJohoMaskingDialog.Controls(fieldName);
            }
            PublicProperties.prototype.getEditTypes = function () {
                var editTypes = new UZA.EditTypeForPublicProperty();

                return editTypes;
            };
            return PublicProperties;
        })();
        ImageJohoMaskingDialog.PublicProperties = PublicProperties;
    })(DBE.ImageJohoMaskingDialog || (DBE.ImageJohoMaskingDialog = {}));
    var ImageJohoMaskingDialog = DBE.ImageJohoMaskingDialog;
})(DBE || (DBE = {}));
</script></div>
