/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jp.co.ndensan.reams.db.dba.definition.core.dankai;

import jp.co.ndensan.reams.ur.urz.definition.message.UrSystemErrorMessages;
import jp.co.ndensan.reams.uz.uza.lang.RString;

/**
 * 介護保険料段階Enumクラスです。
 *
 * @reamsid_L DBA-1290-070 lishengli
 */
public enum Dankai {

    /**
     * コード:010 名称:第1段階 略称:定義なし
     */
    第1段階("010", "第1段階"),
    /**
     * コード:011 名称:第1段階（特例） 略称:定義なし
     */
    第1段階_特例("011", "第1段階（特例）"),
    /**
     * コード:020 名称:第2段階 略称:定義なし
     */
    第2段階("020", "第2段階"),
    /**
     * コード:021 名称:第2段階（特例） 略称:定義なし
     */
    第2段階_特例("021", "第2段階（特例）"),
    /**
     * コード:030 名称:第3段階 略称:定義なし
     */
    第3段階("030", "第3段階"),
    /**
     * コード:011 名称:第1段階（特例） 略称:定義なし
     */
    第3段階_特例("031", "第3段階（特例）"),
    /**
     * コード:040 名称:第4段階 略称:定義なし
     */
    第4段階("040", "第4段階"),
    /**
     * コード:041 名称:第4段階（特例） 略称:定義なし
     */
    第4段階_特例("041", "第4段階（特例）"),
    /**
     * コード:050 名称:第5段階 略称:定義なし
     */
    第5段階("050", "第5段階"),
    /**
     * コード:051 名称:第1段階（特例） 略称:定義なし
     */
    第5段階_特例("051", "第5段階（特例）"),
    /**
     * コード:060 名称:第6段階 略称:定義なし
     */
    第6段階("060", "第6段階"),
    /**
     * コード:061 名称:第1段階（特例） 略称:定義なし
     */
    第6段階_特例("061", "第6段階（特例）"),
    /**
     * コード:070 名称:第7段階 略称:定義なし
     */
    第7段階("070", "第7段階"),
    /**
     * コード:071 名称:第1段階（特例） 略称:定義なし
     */
    第7段階_特例("071", "第7段階（特例）"),
    /**
     * コード:080 名称:第8段階 略称:定義なし
     */
    第8段階("080", "第8段階"),
    /**
     * コード:081 名称:第1段階（特例） 略称:定義なし
     */
    第8段階_特例("081", "第8段階（特例）"),
    /**
     * コード:090 名称:第9段階 略称:定義なし
     */
    第9段階("090", "第9段階"),
    /**
     * コード:011 名称:第1段階（特例） 略称:定義なし
     */
    第9段階_特例("091", "第9段階（特例）"),
    /**
     * コード:100 名称:第10段階 略称:定義なし
     */
    第10段階("100", "第10段階"),
    /**
     * コード:101 名称:第10段階（特例） 略称:定義なし
     */
    第10段階_特例("101", "第10段階（特例）"),
    /**
     * コード:110 名称:第11段階 略称:定義なし
     */
    第11段階("110", "第11段階"),
    /**
     * コード:111 名称:第1段階（特例） 略称:定義なし
     */
    第11段階_特例("111", "第11段階（特例）"),
    /**
     * コード:120 名称:第12段階 略称:定義なし
     */
    第12段階("120", "第12段階"),
    /**
     * コード:121 名称:第1段階（特例） 略称:定義なし
     */
    第12段階_特例("121", "第12段階（特例）"),
    /**
     * コード:130 名称:第13段階 略称:定義なし
     */
    第13段階("130", "第13段階"),
    /**
     * コード:131 名称:第13段階（特例） 略称:定義なし
     */
    第13段階_特例("131", "第13段階（特例）"),
    /**
     * コード:140 名称:第14段階 略称:定義なし
     */
    第14段階("140", "第14段階"),
    /**
     * コード:141 名称:第14段階（特例） 略称:定義なし
     */
    第14段階_特例("141", "第14段階（特例）"),
    /**
     * コード:150 名称:第15段階 略称:定義なし
     */
    第15段階("150", "第15段階"),
    /**
     * コード:151 名称:第15段階（特例） 略称:定義なし
     */
    第15段階_特例("151", "第15段階（特例）"),
    /**
     * コード:160 名称:第16段階 略称:定義なし
     */
    第16段階("160", "第16段階"),
    /**
     * コード:161 名称:第16段階（特例） 略称:定義なし
     */
    第16段階_特例("161", "第16段階（特例）"),
    /**
     * コード:170 名称:第17段階 略称:定義なし
     */
    第17段階("170", "第17段階"),
    /**
     * コード:171 名称:第17段階（特例） 略称:定義なし
     */
    第17段階_特例("171", "第17段階（特例）"),
    /**
     * コード:180 名称:第18段階 略称:定義なし
     */
    第18段階("180", "第18段階"),
    /**
     * コード:181 名称:第18段階（特例） 略称:定義なし
     */
    第18段階_特例("181", "第18段階（特例）"),
    /**
     * コード:190 名称:第19段階 略称:定義なし
     */
    第19段階("190", "第19段階"),
    /**
     * コード:191 名称:第19段階（特例） 略称:定義なし
     */
    第19段階_特例("191", "第19段階（特例）"),
    /**
     * コード:200 名称:第20段階 略称:定義なし
     */
    第20段階("200", "第20段階"),
    /**
     * コード:201 名称:第20段階（特例） 略称:定義なし
     */
    第20段階_特例("201", "第20段階（特例）");

    private final RString code;
    private final RString fullName;

    private Dankai(String code, String fullname) {
        this.code = new RString(code);
        this.fullName = new RString(fullname);
    }

    /**
     * 利用者負担段階のコードを返します。
     *
     * @return 利用者負担段階のコード
     */
    public RString getコード() {
        return code;
    }

    /**
     * 利用者負担段階の名称を返します。
     *
     * @return 利用者負担段階の名称
     */
    public RString get名称() {
        return fullName;
    }

    /**
     * 利用者負担段階のコードと一致する内容を探します。
     *
     * @param code 利用者負担段階のコード
     * @return {@code code} に対応する利用者負担段階
     */
    public static Dankai toValue(RString code) {

        for (Dankai dankai : Dankai.values()) {
            if (dankai.code.equals(code)) {
                return dankai;
            }
        }
        throw new IllegalArgumentException(UrSystemErrorMessages.変換不可.getReplacedMessage("段階"));
    }
}
