<div class="JSControl UzCompositeControl FloatLeft Width-XS" id="defaultLayout" style="margin: 0px;" data-control-type="CommonChildDiv" data-obj="{&quot;fieldName&quot;:&quot;defaultLayout&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;CommonChildDiv&quot;,&quot;width&quot;:&quot;XS&quot;,&quot;visible&quot;:true,&quot;displayNone&quot;:false,&quot;disabled&quot;:false,&quot;accessKey&quot;:&quot;&quot;,&quot;nextFocusFieldName&quot;:&quot;&quot;,&quot;wrap&quot;:false,&quot;float&quot;:0,&quot;toolTip&quot;:&quot;&quot;,&quot;authorityMode&quot;:0,&quot;marginLeft&quot;:&quot;0px&quot;,&quot;marginRight&quot;:&quot;0px&quot;,&quot;selectControlID&quot;:&quot;defaultLayout&quot;,&quot;helpMessageID&quot;:&quot;&quot;,&quot;jpControlName&quot;:&quot;&quot;,&quot;authorityID&quot;:&quot;&quot;,&quot;packageName&quot;:&quot;hokenshalist&quot;,&quot;businessId&quot;:&quot;DBX&quot;,&quot;controlName&quot;:&quot;HokenshaList&quot;,&quot;marginTop&quot;:&quot;0px&quot;,&quot;marginBottom&quot;:&quot;0px&quot;,&quot;dataPassingForDialog&quot;:[],&quot;dialogOkEventNameForDialog&quot;:&quot;&quot;,&quot;dialogCancelEventNameForDialog&quot;:&quot;&quot;,&quot;heightForDialog&quot;:&quot;M&quot;,&quot;firstFocusFieldName&quot;:&quot;&quot;,&quot;lastFocusFieldName&quot;:&quot;&quot;,&quot;modes&quot;:[],&quot;publicEvents&quot;:[],&quot;publicEventsAlias&quot;:[],&quot;responsiveType&quot;:0,&quot;minWidth&quot;:&quot;&quot;,&quot;minHeight&quot;:&quot;&quot;,&quot;widthPercent&quot;:&quot;&quot;,&quot;heightPercent&quot;:&quot;&quot;,&quot;EditTypes&quot;:{&quot;_editTypes&quot;:[]}}" data-is-composite-control="true" data-control-name="DBX.HokenshaList"><div class="StateChangable UzPanel JSControl FloatLeft marginTop-Default marginBottom-Default marginLeft-Default marginRight-Default UzCommonChildDivPanel UzCompositeChild" id="HokenshaList" style="width: 245px; margin-top: 0px; margin-bottom: 0px;" data-control-type="Panel" data-obj="{&quot;fieldName&quot;:&quot;HokenshaList&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;Panel&quot;,&quot;width&quot;:&quot;245px&quot;,&quot;marginLeft&quot;:&quot;Default&quot;,&quot;marginRight&quot;:&quot;Default&quot;,&quot;selectControlID&quot;:&quot;HokenshaList&quot;,&quot;title&quot;:&quot;&quot;,&quot;postParameterPanelNames&quot;:[{&quot;postParameterPanelNames&quot;:&quot;HokenshaList&quot;}],&quot;requestSettings&quot;:[],&quot;hiddenInput&quot;:[],&quot;session&quot;:{},&quot;eraseBorder&quot;:true,&quot;widthAuto&quot;:false,&quot;focusPositionID&quot;:&quot;createFile&quot;,&quot;canPost&quot;:true}"><div class="UzPanelHeader" id="HokenshaList_panel_header_area" style="width: auto; display: none;"><span class="closeIconSpan ui-icon ui-icon-circle-close" style="display: none;"></span><span class="iconSpan ui-icon ui-icon-circle-triangle-n" style="visibility: visible;"></span><span class="textSpan">タイトル</span><div class="groupBoxBorder" style="display: none;"></div></div><div class="UzPanelBody ui-widget-content ui-droppable ui-sortable panelPaddingDelete Panel-EraseBoder" id="HokenshaList_panel_body_area"><div class="UzDropDownList WithLabel JSControl FloatLeft marginLeft-XS marginRight-XS controlMargin-M UzCompositeChild" id="ddlHokenshaList" style="width: 233px; height: 20px;" data-control-type="DropDownList" data-obj="{&quot;fieldName&quot;:&quot;ddlHokenshaList&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;DropDownList&quot;,&quot;width&quot;:&quot;150px&quot;,&quot;selectControlID&quot;:&quot;ddlHokenshaList_core&quot;,&quot;selectedItem&quot;:null,&quot;dataSource&quot;:[],&quot;labelLText&quot;:&quot;保険者&quot;,&quot;labelLWidth&quot;:&quot;80px&quot;}"><span class="word-wrap-break-word Label-L text-align-right" id="ddlHokenshaList_labelL" style="width: 80px;"><span>保険者</span></span><select class="CoreElement" id="ddlHokenshaList_core" style="width: 150px;"></select></div></div></div>    
   <script class="RamlConvert" type="text/javascript">
var DBX= DBX? DBX: {};
DBX['HOKENSHALIST'] = {};
DBX['HOKENSHALIST'].HokenshaListRequest = function(parentFieldName){ 
var paramArray = [];var parameter0 = Uz.JSControlUtil.getJSControl(parentFieldName + '_HokenshaList').getProperty();parameter0.ddlHokenshaList = Uz.JSControlUtil.getJSControl(parentFieldName + '_ddlHokenshaList').getProperty();paramArray.push(parameter0);
return paramArray;
 };
</script><script>var DBX;
(function (DBX) {
    (function (HokenshaList) {
        var Events = (function () {
            function Events() {
            }
            return Events;
        })();
        HokenshaList.Events = Events;

        var Controls = (function () {
            function Controls(fieldName) {
                this._myName = fieldName;
            }
            Controls.myType = function () {
                return "HokenshaList";
            };

            Controls.prototype.convFiledNameSelf = function () {
                return this._myName + "_" + DBX.HokenshaList.Controls.myType();
            };

            Controls.prototype.convFiledName = function (fieldName) {
                return this._myName + "_" + DBX.HokenshaList.Controls.myType() + "_" + fieldName;
            };

            Controls.prototype.HokenshaList = function () {
                return new UZA.Panel(this.convFiledNameSelf());
            };

            Controls.prototype.ddlHokenshaList = function () {
                return new UZA.DropDownList(this.convFiledName("ddlHokenshaList"));
            };
            return Controls;
        })();
        HokenshaList.Controls = Controls;
    })(DBX.HokenshaList || (DBX.HokenshaList = {}));
    var HokenshaList = DBX.HokenshaList;
})(DBX || (DBX = {}));
var DBX;
(function (DBX) {
    (function (HokenshaList) {
        var ModeController = (function () {
            function ModeController(fieldName) {
                this.fieldName = fieldName;
                this.controls = new HokenshaList.Controls(fieldName);
            }
            ModeController.prototype.Properties = function () {
                return new UZA.CommonChildDiv(this.fieldName);
            };

            ModeController.prototype.PublicProperties = function () {
                return new HokenshaList.PublicProperties(this.fieldName);
            };
            return ModeController;
        })();
        HokenshaList.ModeController = ModeController;
    })(DBX.HokenshaList || (DBX.HokenshaList = {}));
    var HokenshaList = DBX.HokenshaList;
})(DBX || (DBX = {}));

var DBX;
(function (DBX) {
    (function (HokenshaList) {
        var PublicProperties = (function () {
            function PublicProperties(fieldName) {
                this.fieldName = fieldName;
                this.controls = new HokenshaList.Controls(fieldName);
            }
            PublicProperties.prototype.getEditTypes = function () {
                var editTypes = new UZA.EditTypeForPublicProperty();

                return editTypes;
            };
            return PublicProperties;
        })();
        HokenshaList.PublicProperties = PublicProperties;
    })(DBX.HokenshaList || (DBX.HokenshaList = {}));
    var HokenshaList = DBX.HokenshaList;
})(DBX || (DBX = {}));
</script></div>
