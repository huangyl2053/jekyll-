<div class="JSControl UzCompositeControl FloatLeft Width-XS" id="defaultLayout" style="margin: 0px;" data-control-type="CommonChildDiv" data-obj="{&quot;fieldName&quot;:&quot;defaultLayout&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;CommonChildDiv&quot;,&quot;width&quot;:&quot;XS&quot;,&quot;visible&quot;:true,&quot;displayNone&quot;:false,&quot;disabled&quot;:false,&quot;accessKey&quot;:&quot;&quot;,&quot;nextFocusFieldName&quot;:&quot;&quot;,&quot;wrap&quot;:false,&quot;float&quot;:0,&quot;toolTip&quot;:&quot;&quot;,&quot;authorityMode&quot;:0,&quot;marginLeft&quot;:&quot;0px&quot;,&quot;marginRight&quot;:&quot;0px&quot;,&quot;selectControlID&quot;:&quot;defaultLayout&quot;,&quot;helpMessageID&quot;:&quot;&quot;,&quot;jpControlName&quot;:&quot;&quot;,&quot;packageName&quot;:&quot;chosaitakusakiandchosaininput&quot;,&quot;businessId&quot;:&quot;DBZ&quot;,&quot;controlName&quot;:&quot;ChosaItakusakiAndChosainInput&quot;,&quot;marginTop&quot;:&quot;0px&quot;,&quot;marginBottom&quot;:&quot;0px&quot;,&quot;dataPassingForDialog&quot;:[],&quot;dialogOkEventNameForDialog&quot;:&quot;&quot;,&quot;dialogCancelEventNameForDialog&quot;:&quot;&quot;,&quot;heightForDialog&quot;:&quot;M&quot;,&quot;firstFocusFieldName&quot;:&quot;&quot;,&quot;lastFocusFieldName&quot;:&quot;&quot;,&quot;modes&quot;:[],&quot;publicEvents&quot;:[],&quot;publicEventsAlias&quot;:[],&quot;EditTypes&quot;:{&quot;_editTypes&quot;:[]}}" data-is-composite-control="true" data-control-name="DBZ.ChosaItakusakiAndChosainInput"><div class="StateChangable UzPanel JSControl FloatLeft marginTop-Default marginBottom-Default marginLeft-Default UzCommonChildDivPanel marginRight-Default UzCompositeChild" id="ChosaItakusakiAndChosainInput" style="width: auto; margin-top: 0px; margin-bottom: 0px; display: block;" data-control-type="Panel" data-obj="{&quot;fieldName&quot;:&quot;ChosaItakusakiAndChosainInput&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;Panel&quot;,&quot;width&quot;:&quot;1200px&quot;,&quot;marginLeft&quot;:&quot;Default&quot;,&quot;marginRight&quot;:&quot;Default&quot;,&quot;selectControlID&quot;:&quot;ChosaItakusakiAndChosainInput&quot;,&quot;title&quot;:&quot;&quot;,&quot;postParameterPanelNames&quot;:[{&quot;postParameterPanelNames&quot;:&quot;ChosaItakusakiAndChosainInput&quot;}],&quot;requestSettings&quot;:[{&quot;eventName&quot;:&quot;onLoad&quot;,&quot;requestUrl&quot;:&quot;&quot;},{&quot;eventName&quot;:&quot;onBlurTxtchosaItakusaki&quot;,&quot;requestUrl&quot;:&quot;dbz/db/dbz/ChosaItakusakiAndChosainInput/onBlur_txtChosaItakusakiCode&quot;},{&quot;eventName&quot;:&quot;onClickBtnZenkaiFukusha&quot;,&quot;requestUrl&quot;:&quot;dbz/db/dbz/ChosaItakusakiAndChosainInput/onClick_btnZenkaiFukusha&quot;},{&quot;eventName&quot;:&quot;onBlurTxtChosaincode&quot;,&quot;requestUrl&quot;:&quot;dbz/db/dbz/ChosaItakusakiAndChosainInput/onBlur_txtChosainCode&quot;},{&quot;eventName&quot;:&quot;onClickBtnClear&quot;,&quot;requestUrl&quot;:&quot;dbz/db/dbz/ChosaItakusakiAndChosainInput/onClick_btnClear&quot;}],&quot;hiddenInput&quot;:[{&quot;propertyName&quot;:&quot;hdnDatabaseSubGyomuCode&quot;,&quot;value&quot;:&quot;&quot;},{&quot;propertyName&quot;:&quot;hdnChosainRenrakuJiko&quot;,&quot;value&quot;:&quot;&quot;},{&quot;propertyName&quot;:&quot;hdnShinseishoKanriNo&quot;,&quot;value&quot;:&quot;&quot;},{&quot;propertyName&quot;:&quot;hdnShichosonCode&quot;,&quot;value&quot;:&quot;&quot;}],&quot;session&quot;:{},&quot;eraseBorder&quot;:true,&quot;canPost&quot;:true}"><div class="UzPanelHeader" id="ChosaItakusakiAndChosainInput_panel_header_area" style="width: auto; display: none;"><span class="closeIconSpan ui-icon ui-icon-circle-close" style="display: none;"></span><span class="iconSpan ui-icon ui-icon-circle-triangle-n" style="visibility: visible;"></span><span class="textSpan">調査委託先/調査員</span><div class="groupBoxBorder" style="display: none;"></div></div><div class="UzPanelBody ui-widget-content ui-droppable ui-sortable Panel-EraseBoder panelPaddingDelete" id="ChosaItakusakiAndChosainInput_panel_body_area"><div class="WithLabel TextBoxOuterDiv UzTextBoxCode JSControl FloatLeft marginLeft-XS controlMargin-M UzCompositeChild" id="txtChosaItakusakiCode" style="width: 209px; height: 21px; margin-right: 0px; display: block;" data-control-type="TextBoxCode" data-obj="{&quot;fieldName&quot;:&quot;txtChosaItakusakiCode&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;TextBoxCode&quot;,&quot;width&quot;:&quot;85px&quot;,&quot;marginRight&quot;:&quot;0px&quot;,&quot;selectControlID&quot;:&quot;txtChosaItakusakiCode_core&quot;,&quot;textKind&quot;:2,&quot;onBlur&quot;:&quot;onBlurTxtchosaItakusaki&quot;,&quot;suggest&quot;:[],&quot;labelLText&quot;:&quot;認定調査委託先&quot;}"><span class="word-wrap-break-word Label-L text-align-right Width-S" id="txtChosaItakusakiCode_labelL"><span>認定調査委託先</span></span><input class="UzTextBox CoreElement text-align-left ime-mode-Off" id="txtChosaItakusakiCode_core" style="width: 85px;" type="text" placeholder=""></div><input class="UzButtonDialog JSControl FloatLeft controlMargin-M Width-S heightTextBoxMatchesFlag HeightTextBoxMatchesForImage UzCompositeChild" id="btnChosaItakusakiGuide" style="margin-right: 5px; margin-left: 5px; opacity: 0.8;" type="image" alt="image" src="/ur/urz/image/UR_InputGuide.png" data-control-type="ButtonDialog" data-obj="{&quot;fieldName&quot;:&quot;btnChosaItakusakiGuide&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;ButtonDialog&quot;,&quot;width&quot;:&quot;S&quot;,&quot;marginLeft&quot;:&quot;5px&quot;,&quot;marginRight&quot;:&quot;5px&quot;,&quot;selectControlID&quot;:&quot;btnChosaItakusakiGuide&quot;,&quot;appearance&quot;:2,&quot;imageFileUrl&quot;:&quot;/ur/urz/image/UR_InputGuide.png&quot;,&quot;heightTextBoxMatches&quot;:true,&quot;displayChildDivName&quot;:&quot;DBZ.ShujiiIryokikanAndShujiiGuide&quot;,&quot;dataPassing&quot;:[]}"><div class="WithLabel TextBoxOuterDiv JSControl FloatLeft controlMargin-M UzCompositeChild" id="txtChosaItakusakiName" style="width: 455px; height: 20px; margin-right: 2px; margin-left: 1px; display: block;" data-control-type="TextBox" data-obj="{&quot;fieldName&quot;:&quot;txtChosaItakusakiName&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;TextBox&quot;,&quot;width&quot;:&quot;450px&quot;,&quot;marginLeft&quot;:&quot;1px&quot;,&quot;marginRight&quot;:&quot;2px&quot;,&quot;selectControlID&quot;:&quot;txtChosaItakusakiName_core&quot;,&quot;readOnly&quot;:true,&quot;suggest&quot;:[]}"><input tabindex="-1" class="UzTextBox CoreElement text-align-left ime-mode-Hiragana readonlyColor" id="txtChosaItakusakiName_core" style="width: 450px;" type="text" placeholder=""></div><button class="UzButtonDialog JSControl FloatLeft controlMargin-M marginLeft-XS marginRight-XS Width-M UzCompositeChild" id="btnChosainRenrakuJiko" style="opacity: 0.8;" type="button" data-control-type="ButtonDialog" data-obj="{&quot;fieldName&quot;:&quot;btnChosainRenrakuJiko&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;ButtonDialog&quot;,&quot;width&quot;:&quot;M&quot;,&quot;selectControlID&quot;:&quot;btnChosainRenrakuJiko&quot;,&quot;text&quot;:&quot;調査員への連絡事項&quot;,&quot;displayChildDivName&quot;:&quot;DBZ.NinteiShinseiRenrakuJoho&quot;,&quot;dataPassing&quot;:[{&quot;key&quot;:&quot;ChosainRenrakuJiko&quot;,&quot;controlName&quot;:&quot;ChosaItakusakiAndChosainInput.hdnChosainRenrakuJiko&quot;}]}"><span>調査員への連絡事項</span></button><button class="UzButton JSControl controlMargin-M Width-S FloatRight marginLeft-XS marginRight-XS UzCompositeChild" id="btnZenkaiFukusha" style="opacity: 0.8;" type="button" data-control-type="Button" data-obj="{&quot;fieldName&quot;:&quot;btnZenkaiFukusha&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;Button&quot;,&quot;width&quot;:&quot;S&quot;,&quot;float&quot;:2,&quot;selectControlID&quot;:&quot;btnZenkaiFukusha&quot;,&quot;onClick&quot;:&quot;onClickBtnZenkaiFukusha&quot;,&quot;text&quot;:&quot;前回を複写する&quot;}"><span>前回を複写する</span></button><div title="" class="WithLabel TextBoxOuterDiv UzTextBoxCode JSControl FloatLeft controlMargin-M ClearFloat marginLeft-XS UzCompositeChild" id="txtChosainCode" style="width: 209px; height: 23px; margin-right: 0px; position: relative; opacity: 1;" data-control-type="TextBoxCode" data-obj="{&quot;fieldName&quot;:&quot;txtChosainCode&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;TextBoxCode&quot;,&quot;width&quot;:&quot;85px&quot;,&quot;wrap&quot;:true,&quot;marginRight&quot;:&quot;0px&quot;,&quot;selectControlID&quot;:&quot;txtChosainCode_core&quot;,&quot;maxLength&quot;:&quot;8&quot;,&quot;textKind&quot;:2,&quot;onBlur&quot;:&quot;onBlurTxtChosaincode&quot;,&quot;suggest&quot;:[],&quot;labelLText&quot;:&quot;認定調査員&quot;}"><span class="word-wrap-break-word Label-L text-align-right Width-S" id="txtChosainCode_labelL"><span>認定調査員</span></span><input class="UzTextBox CoreElement text-align-left ime-mode-Off ui-autocomplete-input" id="txtChosainCode_core" style="width: 85px;" type="text" placeholder="" autocomplete="off"><span class="ui-helper-hidden-accessible" role="status" aria-live="polite"></span></div><input class="UzButtonDialog JSControl FloatLeft controlMargin-M heightTextBoxMatchesFlag HeightTextBoxMatchesForImage Width-S UzCompositeChild" id="btnChosainGuide" style="padding-top: 3px; margin-right: 5px; margin-left: 5px; opacity: 0.8;" type="image" alt="image" src="/ur/urz/image/UR_InputGuide.png" data-control-type="ButtonDialog" data-obj="{&quot;fieldName&quot;:&quot;btnChosainGuide&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;ButtonDialog&quot;,&quot;width&quot;:&quot;S&quot;,&quot;marginLeft&quot;:&quot;5px&quot;,&quot;marginRight&quot;:&quot;5px&quot;,&quot;selectControlID&quot;:&quot;btnChosainGuide&quot;,&quot;appearance&quot;:2,&quot;imageFileUrl&quot;:&quot;/ur/urz/image/UR_InputGuide.png&quot;,&quot;heightTextBoxMatches&quot;:true,&quot;displayChildDivName&quot;:&quot;DBZ.ShujiiIryokikanAndShujiiGuide&quot;,&quot;dataPassing&quot;:[]}"><div title="" class="WithLabel TextBoxOuterDiv JSControl FloatLeft controlMargin-M UzCompositeChild" id="txtChosainName" style="width: 455px; height: 20px; margin-right: 2px; margin-left: 1px;" data-control-type="TextBox" data-obj="{&quot;fieldName&quot;:&quot;txtChosainName&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;TextBox&quot;,&quot;width&quot;:&quot;450px&quot;,&quot;marginLeft&quot;:&quot;1px&quot;,&quot;marginRight&quot;:&quot;2px&quot;,&quot;selectControlID&quot;:&quot;txtChosainName_core&quot;,&quot;readOnly&quot;:true,&quot;suggest&quot;:[]}"><input tabindex="-1" class="UzTextBox CoreElement readonlyColor text-align-left ime-mode-Hiragana ui-autocomplete-input" id="txtChosainName_core" style="width: 450px;" type="text" placeholder="" autocomplete="off"><span class="ui-helper-hidden-accessible" role="status" aria-live="polite"></span></div><button class="UzButton JSControl controlMargin-M FloatRight marginLeft-XS marginRight-XS Width-S UzCompositeChild" id="btnClear" style="opacity: 0.8;" type="button" data-control-type="Button" data-obj="{&quot;fieldName&quot;:&quot;btnClear&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;Button&quot;,&quot;width&quot;:&quot;S&quot;,&quot;float&quot;:2,&quot;selectControlID&quot;:&quot;btnClear&quot;,&quot;onClick&quot;:&quot;onClickBtnClear&quot;,&quot;text&quot;:&quot;クリアする&quot;}"><span>クリアする</span></button></div></div>          
   
   
   
   
             
   
   
     
     
   
   
       
       
   
       
     
   
   
     
   
     
   
   
     
               <script class="RamlConvert" type="text/javascript">
var DBZ= DBZ? DBZ: {};
DBZ['CHOSAITAKUSAKIANDCHOSAININPUT'] = {};
DBZ['CHOSAITAKUSAKIANDCHOSAININPUT'].ChosaItakusakiAndChosainInputRequest = function(parentFieldName){ 
var paramArray = [];var parameter0 = Uz.JSControlUtil.getJSControl(parentFieldName + '_ChosaItakusakiAndChosainInput').getProperty();parameter0.txtChosaItakusakiCode = Uz.JSControlUtil.getJSControl(parentFieldName + '_txtChosaItakusakiCode').getProperty();parameter0.btnChosaItakusakiGuide = Uz.JSControlUtil.getJSControl(parentFieldName + '_btnChosaItakusakiGuide').getProperty();parameter0.txtChosaItakusakiName = Uz.JSControlUtil.getJSControl(parentFieldName + '_txtChosaItakusakiName').getProperty();parameter0.btnChosainRenrakuJiko = Uz.JSControlUtil.getJSControl(parentFieldName + '_btnChosainRenrakuJiko').getProperty();parameter0.btnZenkaiFukusha = Uz.JSControlUtil.getJSControl(parentFieldName + '_btnZenkaiFukusha').getProperty();parameter0.txtChosainCode = Uz.JSControlUtil.getJSControl(parentFieldName + '_txtChosainCode').getProperty();parameter0.btnChosainGuide = Uz.JSControlUtil.getJSControl(parentFieldName + '_btnChosainGuide').getProperty();parameter0.txtChosainName = Uz.JSControlUtil.getJSControl(parentFieldName + '_txtChosainName').getProperty();parameter0.btnClear = Uz.JSControlUtil.getJSControl(parentFieldName + '_btnClear').getProperty();paramArray.push(parameter0);
return paramArray;
 };
</script><script>var DBZ;
(function (DBZ) {
    (function (ChosaItakusakiAndChosainInput) {
        var Events = (function () {
            function Events() {
            }
            Events.onBlurTxtchosaItakusaki = function () {
                return "onBlurTxtchosaItakusaki";
            };

            Events.onClickBtnZenkaiFukusha = function () {
                return "onClickBtnZenkaiFukusha";
            };

            Events.onBlurTxtChosaincode = function () {
                return "onBlurTxtChosaincode";
            };

            Events.onClickBtnClear = function () {
                return "onClickBtnClear";
            };
            return Events;
        })();
        ChosaItakusakiAndChosainInput.Events = Events;

        var Controls = (function () {
            function Controls(fieldName) {
                this._myName = fieldName;
            }
            Controls.myType = function () {
                return "ChosaItakusakiAndChosainInput";
            };

            Controls.prototype.convFiledNameSelf = function () {
                return this._myName + "_" + DBZ.ChosaItakusakiAndChosainInput.Controls.myType();
            };

            Controls.prototype.convFiledName = function (fieldName) {
                return this._myName + "_" + DBZ.ChosaItakusakiAndChosainInput.Controls.myType() + "_" + fieldName;
            };

            Controls.prototype.ChosaItakusakiAndChosainInput = function () {
                return new UZA.Panel(this.convFiledNameSelf());
            };

            Controls.prototype.txtChosaItakusakiCode = function () {
                return new UZA.TextBoxCode(this.convFiledName("txtChosaItakusakiCode"));
            };

            Controls.prototype.btnChosaItakusakiGuide = function () {
                return new UZA.ButtonDialog(this.convFiledName("btnChosaItakusakiGuide"));
            };

            Controls.prototype.txtChosaItakusakiName = function () {
                return new UZA.TextBox(this.convFiledName("txtChosaItakusakiName"));
            };

            Controls.prototype.btnChosainRenrakuJiko = function () {
                return new UZA.ButtonDialog(this.convFiledName("btnChosainRenrakuJiko"));
            };

            Controls.prototype.btnZenkaiFukusha = function () {
                return new UZA.Button(this.convFiledName("btnZenkaiFukusha"));
            };

            Controls.prototype.txtChosainCode = function () {
                return new UZA.TextBoxCode(this.convFiledName("txtChosainCode"));
            };

            Controls.prototype.btnChosainGuide = function () {
                return new UZA.ButtonDialog(this.convFiledName("btnChosainGuide"));
            };

            Controls.prototype.txtChosainName = function () {
                return new UZA.TextBox(this.convFiledName("txtChosainName"));
            };

            Controls.prototype.btnClear = function () {
                return new UZA.Button(this.convFiledName("btnClear"));
            };
            return Controls;
        })();
        ChosaItakusakiAndChosainInput.Controls = Controls;
    })(DBZ.ChosaItakusakiAndChosainInput || (DBZ.ChosaItakusakiAndChosainInput = {}));
    var ChosaItakusakiAndChosainInput = DBZ.ChosaItakusakiAndChosainInput;
})(DBZ || (DBZ = {}));
var DBZ;
(function (DBZ) {
    (function (ChosaItakusakiAndChosainInput) {
        var ModeController = (function () {
            function ModeController(fieldName) {
                this.fieldName = fieldName;
                this.controls = new ChosaItakusakiAndChosainInput.Controls(fieldName);
            }
            ModeController.prototype.Properties = function () {
                return new UZA.CommonChildDiv(this.fieldName);
            };

            ModeController.prototype.PublicProperties = function () {
                return new ChosaItakusakiAndChosainInput.PublicProperties(this.fieldName);
            };

            ModeController.prototype.ShoriType = function () {
                return new Modes.ShoriType(this.controls);
            };
            return ModeController;
        })();
        ChosaItakusakiAndChosainInput.ModeController = ModeController;
        (function (Modes) {
            var ShoriType = (function () {
                function ShoriType(controls) {
                    this.controls = controls;
                }
                ShoriType.prototype.InputMode = function () {
                    this.controls.txtChosainCode().readOnly = false;
                    this.controls.btnChosainGuide().disabled = false;

                    this.controls.txtChosaItakusakiCode().readOnly = false;
                    this.controls.btnChosaItakusakiGuide().disabled = false;

                    this.controls.btnZenkaiFukusha().disabled = false;
                    this.controls.btnClear().disabled = false;
                    this.controls.btnChosainRenrakuJiko().disabled = false;

                    this.controls.btnChosainRenrakuJiko().displayNone = false;
                    this.controls.btnZenkaiFukusha().displayNone = false;
                    this.controls.btnClear().displayNone = false;
                    this.controls.btnChosaItakusakiGuide().displayNone = false;
                    this.controls.btnChosainGuide().displayNone = false;
                };

                ShoriType.prototype.ShokaiMode = function () {
                    this.controls.txtChosainCode().readOnly = true;
                    this.controls.btnChosainGuide().disabled = true;

                    this.controls.txtChosaItakusakiCode().readOnly = true;
                    this.controls.btnChosaItakusakiGuide().disabled = true;

                    this.controls.btnZenkaiFukusha().displayNone = false;
                    this.controls.btnClear().displayNone = false;

                    this.controls.btnZenkaiFukusha().disabled = true;
                    this.controls.btnClear().disabled = true;
                    this.controls.btnChosainRenrakuJiko().disabled = true;

                    this.controls.btnChosainRenrakuJiko().displayNone = false;
                    this.controls.btnZenkaiFukusha().displayNone = false;
                    this.controls.btnClear().displayNone = false;
                    this.controls.btnChosaItakusakiGuide().displayNone = false;
                    this.controls.btnChosainGuide().displayNone = false;
                };

                ShoriType.prototype.SimpleInputMode = function () {
                    this.controls.txtChosainCode().readOnly = false;
                    this.controls.txtChosaItakusakiCode().readOnly = false;

                    this.controls.btnChosainGuide().disabled = false;
                    this.controls.btnChosaItakusakiGuide().disabled = false;

                    this.controls.btnZenkaiFukusha().displayNone = true;
                    this.controls.btnClear().displayNone = true;
                    this.controls.btnChosainRenrakuJiko().displayNone = true;
                    this.controls.btnChosaItakusakiGuide().displayNone = false;
                    this.controls.btnChosainGuide().displayNone = false;
                };

                ShoriType.prototype.SimpleShokaiMode = function () {
                    this.controls.txtChosainCode().readOnly = true;
                    this.controls.btnChosainGuide().disabled = true;

                    this.controls.txtChosaItakusakiCode().readOnly = true;
                    this.controls.btnChosaItakusakiGuide().disabled = true;

                    this.controls.btnZenkaiFukusha().disabled = true;
                    this.controls.btnClear().disabled = true;
                    this.controls.btnChosainRenrakuJiko().disabled = true;

                    this.controls.btnZenkaiFukusha().displayNone = true;
                    this.controls.btnClear().displayNone = true;
                    this.controls.btnChosainRenrakuJiko().displayNone = true;
                    this.controls.btnChosaItakusakiGuide().displayNone = true;
                    this.controls.btnChosainGuide().displayNone = true;
                };
                return ShoriType;
            })();
            Modes.ShoriType = ShoriType;
        })(ChosaItakusakiAndChosainInput.Modes || (ChosaItakusakiAndChosainInput.Modes = {}));
        var Modes = ChosaItakusakiAndChosainInput.Modes;
    })(DBZ.ChosaItakusakiAndChosainInput || (DBZ.ChosaItakusakiAndChosainInput = {}));
    var ChosaItakusakiAndChosainInput = DBZ.ChosaItakusakiAndChosainInput;
})(DBZ || (DBZ = {}));

var DBZ;
(function (DBZ) {
    (function (ChosaItakusakiAndChosainInput) {
        var PublicProperties = (function () {
            function PublicProperties(fieldName) {
                this.fieldName = fieldName;
                this.controls = new ChosaItakusakiAndChosainInput.Controls(fieldName);
            }
            PublicProperties.prototype.getEditTypes = function () {
                var editTypes = new UZA.EditTypeForPublicProperty();

                return editTypes;
            };
            return PublicProperties;
        })();
        ChosaItakusakiAndChosainInput.PublicProperties = PublicProperties;
    })(DBZ.ChosaItakusakiAndChosainInput || (DBZ.ChosaItakusakiAndChosainInput = {}));
    var ChosaItakusakiAndChosainInput = DBZ.ChosaItakusakiAndChosainInput;
})(DBZ || (DBZ = {}));
</script></div>
