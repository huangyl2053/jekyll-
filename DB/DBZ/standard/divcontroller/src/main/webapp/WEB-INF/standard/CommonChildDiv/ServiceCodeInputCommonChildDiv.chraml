<div class="JSControl UzCompositeControl FloatLeft Width-XS" id="defaultLayout" style="margin: 0px;" data-control-type="CommonChildDiv" data-obj="{&quot;fieldName&quot;:&quot;defaultLayout&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;CommonChildDiv&quot;,&quot;width&quot;:&quot;XS&quot;,&quot;visible&quot;:true,&quot;displayNone&quot;:false,&quot;disabled&quot;:false,&quot;accessKey&quot;:&quot;&quot;,&quot;nextFocusFieldName&quot;:&quot;&quot;,&quot;wrap&quot;:false,&quot;float&quot;:0,&quot;toolTip&quot;:&quot;&quot;,&quot;authorityMode&quot;:0,&quot;marginLeft&quot;:&quot;0px&quot;,&quot;marginRight&quot;:&quot;0px&quot;,&quot;selectControlID&quot;:&quot;defaultLayout&quot;,&quot;helpMessageID&quot;:&quot;&quot;,&quot;jpControlName&quot;:&quot;&quot;,&quot;packageName&quot;:&quot;&quot;,&quot;businessId&quot;:&quot;DBZ&quot;,&quot;controlName&quot;:&quot;ServiceCodeInputCommonChildDiv&quot;,&quot;marginTop&quot;:&quot;0px&quot;,&quot;marginBottom&quot;:&quot;0px&quot;,&quot;dataPassingForDialog&quot;:[],&quot;dialogOkEventNameForDialog&quot;:&quot;&quot;,&quot;dialogCancelEventNameForDialog&quot;:&quot;&quot;,&quot;heightForDialog&quot;:&quot;M&quot;,&quot;firstFocusFieldName&quot;:&quot;&quot;,&quot;lastFocusFieldName&quot;:&quot;&quot;,&quot;modes&quot;:[],&quot;publicEvents&quot;:[],&quot;publicEventsAlias&quot;:[],&quot;EditTypes&quot;:{&quot;_editTypes&quot;:[]}}" data-is-composite-control="true" data-control-name="DBZ.ServiceCodeInputCommonChildDiv"><div class="StateChangable UzPanel JSControl FloatLeft Panel-Shadow UzCommonChildDivPanel Width-G1 UzCompositeChild" id="ServiceCodeInputCommonChildDiv" style="margin: 0px; width: auto;" data-control-type="Panel" data-obj="{&quot;fieldName&quot;:&quot;ServiceCodeInputCommonChildDiv&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;Panel&quot;,&quot;width&quot;:&quot;G1&quot;,&quot;marginLeft&quot;:&quot;0px&quot;,&quot;marginRight&quot;:&quot;0px&quot;,&quot;selectControlID&quot;:&quot;ServiceCodeInputCommonChildDiv&quot;,&quot;title&quot;:&quot;&quot;,&quot;marginTop&quot;:&quot;0px&quot;,&quot;marginBottom&quot;:&quot;0px&quot;,&quot;postParameterPanelNames&quot;:[{&quot;postParameterPanelNames&quot;:&quot;ServiceCodeInputCommonChildDiv&quot;}],&quot;requestSettings&quot;:[],&quot;hiddenInput&quot;:[],&quot;session&quot;:{},&quot;canPost&quot;:true}"><div class="UzPanelHeader" id="ServiceCodeInputCommonChildDiv_panel_header_area" style="width: auto; display: none;"><span class="closeIconSpan ui-icon ui-icon-circle-close" style="display: none;"></span><span class="iconSpan ui-icon ui-icon-circle-triangle-n" style="visibility: visible;"></span><span class="textSpan">タイトル</span><div class="groupBoxBorder" style="display: none;"></div></div><div class="UzPanelBody ui-widget-content ui-droppable ui-sortable panelPaddingDelete" id="ServiceCodeInputCommonChildDiv_panel_body_area"><span class="UzLabel word-wrap-break-word JSControl FloatLeft controlMargin-M text-align-right required Width-S marginLeft-XS UzCompositeChild" id="lblServiceCode" style="margin-right: 0px; opacity: 1;" data-control-type="Label" data-obj="{&quot;fieldName&quot;:&quot;lblServiceCode&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;Label&quot;,&quot;width&quot;:&quot;S&quot;,&quot;marginRight&quot;:&quot;0px&quot;,&quot;selectControlID&quot;:&quot;lblServiceCode&quot;,&quot;required&quot;:true,&quot;text&quot;:&quot;サービスコード&quot;}"><span class="requireMark">*</span><span>サービスコード</span></span><div class="WithLabel TextBoxOuterDiv UzTextBoxCode JSControl FloatLeft marginRight-XS controlMargin-M UzCompositeChild" id="txtServiceCode1" style="width: 25px; height: 20px; margin-left: 0px; position: relative; opacity: 1;" data-control-type="TextBoxCode" data-obj="{&quot;fieldName&quot;:&quot;txtServiceCode1&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;TextBoxCode&quot;,&quot;width&quot;:&quot;20px&quot;,&quot;marginLeft&quot;:&quot;0px&quot;,&quot;selectControlID&quot;:&quot;txtServiceCode1_core&quot;,&quot;required&quot;:true,&quot;maxLength&quot;:&quot;2&quot;,&quot;textKind&quot;:2,&quot;suggest&quot;:[]}"><input class="UzTextBox CoreElement text-align-left ime-mode-Off required" id="txtServiceCode1_core" style="width: 20px;" type="text" placeholder=""></div><div class="WithLabel TextBoxOuterDiv UzTextBoxCode JSControl FloatLeft marginRight-XS controlMargin-M UzCompositeChild" id="txtServiceCode2" style="width: 52px; margin-left: 0px;" data-control-type="TextBoxCode" data-obj="{&quot;fieldName&quot;:&quot;txtServiceCode2&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;TextBoxCode&quot;,&quot;marginLeft&quot;:&quot;0px&quot;,&quot;selectControlID&quot;:&quot;txtServiceCode2_core&quot;,&quot;maxLength&quot;:&quot;4&quot;,&quot;textKind&quot;:2,&quot;suggest&quot;:[]}"><input class="UzTextBox CoreElement text-align-left ime-mode-Off Width-XS" id="txtServiceCode2_core" type="text" placeholder=""></div><input class="UzButtonDialog JSControl FloatLeft controlMargin-M Width-S marginLeft-XS heightTextBoxMatchesFlag HeightTextBoxMatchesForImage UzCompositeChild" id="btnKensaku" style="width: 20px; height: 20px; margin-right: 0px; opacity: 0.8;" type="image" alt="image" src="/uz/uza/image/UZ_Search.png" data-control-type="ButtonDialog" data-obj="{&quot;fieldName&quot;:&quot;btnKensaku&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;ButtonDialog&quot;,&quot;width&quot;:&quot;S&quot;,&quot;marginRight&quot;:&quot;0px&quot;,&quot;selectControlID&quot;:&quot;btnKensaku&quot;,&quot;appearance&quot;:2,&quot;imageFileUrl&quot;:&quot;/uz/uza/image/UZ_Search.png&quot;,&quot;heightTextBoxMatches&quot;:true,&quot;dataPassing&quot;:[]}"><div class="WithLabel TextBoxOuterDiv JSControl FloatLeft marginLeft-XS marginRight-XS controlMargin-M UzCompositeChild" id="txtServiceCodeName" style="width: 511px; height: 20px;" data-control-type="TextBox" data-obj="{&quot;fieldName&quot;:&quot;txtServiceCodeName&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;TextBox&quot;,&quot;width&quot;:&quot;L&quot;,&quot;selectControlID&quot;:&quot;txtServiceCodeName_core&quot;,&quot;readOnly&quot;:true,&quot;suggest&quot;:[]}"><input tabindex="-1" class="UzTextBox CoreElement text-align-left ime-mode-Hiragana readonlyColor Width-L" id="txtServiceCodeName_core" type="text" placeholder=""></div></div></div>                
   
         
   
     
   <script class="RamlConvert" type="text/javascript">
var DBZ= DBZ? DBZ: {};
DBZ['SERVICECODEINPUTCOMMONCHILDDIV'] = {};
DBZ['SERVICECODEINPUTCOMMONCHILDDIV'].ServiceCodeInputCommonChildDivRequest = function(parentFieldName){ 
var paramArray = [];var parameter0 = Uz.JSControlUtil.getJSControl(parentFieldName + '_ServiceCodeInputCommonChildDiv').getProperty();parameter0.lblServiceCode = Uz.JSControlUtil.getJSControl(parentFieldName + '_lblServiceCode').getProperty();parameter0.txtServiceCode1 = Uz.JSControlUtil.getJSControl(parentFieldName + '_txtServiceCode1').getProperty();parameter0.txtServiceCode2 = Uz.JSControlUtil.getJSControl(parentFieldName + '_txtServiceCode2').getProperty();parameter0.btnKensaku = Uz.JSControlUtil.getJSControl(parentFieldName + '_btnKensaku').getProperty();parameter0.txtServiceCodeName = Uz.JSControlUtil.getJSControl(parentFieldName + '_txtServiceCodeName').getProperty();paramArray.push(parameter0);
return paramArray;
 };
</script><script>var DBZ;
(function (DBZ) {
    (function (ServiceCodeInputCommonChildDiv) {
        var Events = (function () {
            function Events() {
            }
            return Events;
        })();
        ServiceCodeInputCommonChildDiv.Events = Events;

        var Controls = (function () {
            function Controls(fieldName) {
                this._myName = fieldName;
            }
            Controls.myType = function () {
                return "ServiceCodeInputCommonChildDiv";
            };

            Controls.prototype.convFiledNameSelf = function () {
                return this._myName + "_" + DBZ.ServiceCodeInputCommonChildDiv.Controls.myType();
            };

            Controls.prototype.convFiledName = function (fieldName) {
                return this._myName + "_" + DBZ.ServiceCodeInputCommonChildDiv.Controls.myType() + "_" + fieldName;
            };

            Controls.prototype.ServiceCodeInputCommonChildDiv = function () {
                return new UZA.Panel(this.convFiledNameSelf());
            };

            Controls.prototype.lblServiceCode = function () {
                return new UZA.Label(this.convFiledName("lblServiceCode"));
            };

            Controls.prototype.txtServiceCode1 = function () {
                return new UZA.TextBoxCode(this.convFiledName("txtServiceCode1"));
            };

            Controls.prototype.txtServiceCode2 = function () {
                return new UZA.TextBoxCode(this.convFiledName("txtServiceCode2"));
            };

            Controls.prototype.btnKensaku = function () {
                return new UZA.ButtonDialog(this.convFiledName("btnKensaku"));
            };

            Controls.prototype.txtServiceCodeName = function () {
                return new UZA.TextBox(this.convFiledName("txtServiceCodeName"));
            };
            return Controls;
        })();
        ServiceCodeInputCommonChildDiv.Controls = Controls;
    })(DBZ.ServiceCodeInputCommonChildDiv || (DBZ.ServiceCodeInputCommonChildDiv = {}));
    var ServiceCodeInputCommonChildDiv = DBZ.ServiceCodeInputCommonChildDiv;
})(DBZ || (DBZ = {}));
var DBZ;
(function (DBZ) {
    (function (ServiceCodeInputCommonChildDiv) {
        var ModeController = (function () {
            function ModeController(fieldName) {
                this.fieldName = fieldName;
                this.controls = new ServiceCodeInputCommonChildDiv.Controls(fieldName);
            }
            ModeController.prototype.priorities = function () {
                return [
                    "State"
                ];
            };
            ModeController.prototype.State = function () {
                return new Modes.State(this.controls);
            };
            ModeController.prototype.Properties = function () {
                return new UZA.CommonChildDiv(this.fieldName);
            };

            ModeController.prototype.PublicProperties = function () {
                return new ServiceCodeInputCommonChildDiv.PublicProperties(this.fieldName);
            };
            return ModeController;
        })();
        ServiceCodeInputCommonChildDiv.ModeController = ModeController;

        (function (Modes) {
            var State = (function () {
                function State(controls) {
                    this.controls = controls;
                }
                State.prototype.入力 = function () {
                    this.controls.txtServiceCode1().readOnly = false;
                    this.controls.txtServiceCode2().readOnly = false;
                    this.controls.btnKensaku().disabled = false;
                };
                State.prototype.入力2 = function () {
                    this.controls.txtServiceCode1().readOnly = true;
                    this.controls.txtServiceCode2().readOnly = false;
                    this.controls.btnKensaku().disabled = true;
                };

                State.prototype.照会 = function () {
                    this.controls.txtServiceCode1().readOnly = true;
                    this.controls.txtServiceCode2().readOnly = true;
                    this.controls.btnKensaku().disabled = true;
                };
                return State;
            })();
            Modes.State = State;
        })(ServiceCodeInputCommonChildDiv.Modes || (ServiceCodeInputCommonChildDiv.Modes = {}));
        var Modes = ServiceCodeInputCommonChildDiv.Modes;
    })(DBZ.ServiceCodeInputCommonChildDiv || (DBZ.ServiceCodeInputCommonChildDiv = {}));
    var ServiceCodeInputCommonChildDiv = DBZ.ServiceCodeInputCommonChildDiv;
})(DBZ || (DBZ = {}));

var DBZ;
(function (DBZ) {
    (function (ServiceCodeInputCommonChildDiv) {
        var PublicProperties = (function () {
            function PublicProperties(fieldName) {
                this.fieldName = fieldName;
                this.controls = new ServiceCodeInputCommonChildDiv.Controls(fieldName);
            }
            PublicProperties.prototype.getEditTypes = function () {
                var editTypes = new UZA.EditTypeForPublicProperty();

                return editTypes;
            };
            return PublicProperties;
        })();
        ServiceCodeInputCommonChildDiv.PublicProperties = PublicProperties;
    })(DBZ.ServiceCodeInputCommonChildDiv || (DBZ.ServiceCodeInputCommonChildDiv = {}));
    var ServiceCodeInputCommonChildDiv = DBZ.ServiceCodeInputCommonChildDiv;
})(DBZ || (DBZ = {}));
</script></div>
