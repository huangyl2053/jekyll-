<div class="JSControl UzCompositeControl FloatLeft Width-XS" id="defaultLayout" style="margin: 0px;" data-control-type="CommonChildDiv" data-obj="{&quot;fieldName&quot;:&quot;defaultLayout&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;CommonChildDiv&quot;,&quot;width&quot;:&quot;XS&quot;,&quot;visible&quot;:true,&quot;displayNone&quot;:false,&quot;disabled&quot;:false,&quot;accessKey&quot;:&quot;&quot;,&quot;nextFocusFieldName&quot;:&quot;&quot;,&quot;wrap&quot;:false,&quot;float&quot;:0,&quot;toolTip&quot;:&quot;&quot;,&quot;authorityMode&quot;:0,&quot;marginLeft&quot;:&quot;0px&quot;,&quot;marginRight&quot;:&quot;0px&quot;,&quot;selectControlID&quot;:&quot;defaultLayout&quot;,&quot;helpMessageID&quot;:&quot;&quot;,&quot;jpControlName&quot;:&quot;&quot;,&quot;authorityID&quot;:&quot;&quot;,&quot;packageName&quot;:&quot;&quot;,&quot;businessId&quot;:&quot;DBZ&quot;,&quot;controlName&quot;:&quot;ServiceTypeInputCommonChildDiv&quot;,&quot;marginTop&quot;:&quot;0px&quot;,&quot;marginBottom&quot;:&quot;0px&quot;,&quot;dataPassingForDialog&quot;:[],&quot;dialogOkEventNameForDialog&quot;:&quot;&quot;,&quot;dialogCancelEventNameForDialog&quot;:&quot;&quot;,&quot;dialogCloseEventNameForDialog&quot;:&quot;&quot;,&quot;heightForDialog&quot;:&quot;M&quot;,&quot;firstFocusFieldName&quot;:&quot;&quot;,&quot;lastFocusFieldName&quot;:&quot;&quot;,&quot;modes&quot;:[],&quot;publicEvents&quot;:[],&quot;publicEventsAlias&quot;:[],&quot;responsiveType&quot;:0,&quot;minWidth&quot;:&quot;&quot;,&quot;minHeight&quot;:&quot;&quot;,&quot;widthPercent&quot;:&quot;&quot;,&quot;heightPercent&quot;:&quot;&quot;,&quot;enterKeyAssignedControl&quot;:&quot;&quot;,&quot;EditTypes&quot;:{&quot;_editTypes&quot;:[]}}" data-is-composite-control="true" data-control-name="DBZ.ServiceTypeInputCommonChildDiv"><div class="StateChangable UzPanel JSControl FloatLeft UzCommonChildDivPanel Width-G1 UzCompositeChild" id="ServiceTypeInputCommonChildDiv" style="margin: 0px; width: auto;" data-control-type="Panel" data-obj="{&quot;fieldName&quot;:&quot;ServiceTypeInputCommonChildDiv&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;Panel&quot;,&quot;width&quot;:&quot;G1&quot;,&quot;marginLeft&quot;:&quot;0px&quot;,&quot;marginRight&quot;:&quot;0px&quot;,&quot;selectControlID&quot;:&quot;ServiceTypeInputCommonChildDiv&quot;,&quot;title&quot;:&quot;&quot;,&quot;marginTop&quot;:&quot;0px&quot;,&quot;marginBottom&quot;:&quot;0px&quot;,&quot;postParameterPanelNames&quot;:[{&quot;postParameterPanelNames&quot;:&quot;ServiceTypeInputCommonChildDiv&quot;}],&quot;requestSettings&quot;:[{&quot;eventName&quot;:&quot;onLoad&quot;,&quot;requestUrl&quot;:&quot;&quot;},{&quot;eventName&quot;:&quot;onActive&quot;,&quot;requestUrl&quot;:&quot;&quot;},{&quot;eventName&quot;:&quot;onBlur_txtServiceType&quot;,&quot;requestUrl&quot;:&quot;dbz/db/dbz/ServiceTypeInputCommonChildDiv/onBlur_txtServiceType&quot;}],&quot;hiddenInput&quot;:[],&quot;session&quot;:{},&quot;eraseBorder&quot;:true,&quot;focusPositionID&quot;:&quot;createFile&quot;,&quot;canPost&quot;:true}"><div class="UzPanelHeader" id="ServiceTypeInputCommonChildDiv_panel_header_area" style="width: auto; display: none;"><span class="closeIconSpan ui-icon ui-icon-circle-close" style="display: none;"></span><span class="iconSpan ui-icon ui-icon-circle-triangle-n" style="visibility: visible;"></span><span class="textSpan">タイトル</span><div class="groupBoxBorder" style="display: none;"></div></div><div class="UzPanelBody ui-widget-content ui-droppable ui-sortable panelPaddingDelete Panel-EraseBoder" id="ServiceTypeInputCommonChildDiv_panel_body_area"><div class="WithLabel TextBoxOuterDiv UzTextBoxCode JSControl FloatLeft controlMargin-M UzCompositeChild" id="txtServiceType" style="width: 129px; height: 20px; margin-right: 2px; margin-left: 2px; position: relative; opacity: 1;" data-control-type="TextBoxCode" data-obj="{&quot;fieldName&quot;:&quot;txtServiceType&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;TextBoxCode&quot;,&quot;width&quot;:&quot;20px&quot;,&quot;marginLeft&quot;:&quot;2px&quot;,&quot;marginRight&quot;:&quot;2px&quot;,&quot;selectControlID&quot;:&quot;txtServiceType_core&quot;,&quot;required&quot;:true,&quot;maxLength&quot;:&quot;2&quot;,&quot;textKind&quot;:2,&quot;onBlur&quot;:&quot;onBlur_txtServiceType&quot;,&quot;suggest&quot;:[],&quot;labelLText&quot;:&quot;サービス種類&quot;,&quot;labelLWidth&quot;:&quot;102px&quot;,&quot;permitAlphabet&quot;:true}"><span class="word-wrap-break-word Label-L text-align-right" id="txtServiceType_labelL" style="width: 102px;"><span class="requireMark">*</span><span>サービス種類</span></span><input class="UzTextBox CoreElement text-align-left ime-mode-Off required" id="txtServiceType_core" style="width: 20px;" type="text" placeholder=""></div><input class="UzButtonDialog JSControl FloatLeft controlMargin-M marginLeft-XS heightTextBoxMatchesFlag HeightTextBoxMatchesForImage UzCompositeChild" id="btnKensaku" style="width: 20px; height: 20px; margin-right: 0px;" type="image" alt="image" src="/uz/uza/image/UZ_Search.png" data-control-type="ButtonDialog" data-obj="{&quot;fieldName&quot;:&quot;btnKensaku&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;ButtonDialog&quot;,&quot;width&quot;:&quot;S&quot;,&quot;marginRight&quot;:&quot;0px&quot;,&quot;selectControlID&quot;:&quot;btnKensaku&quot;,&quot;appearance&quot;:2,&quot;imageFileUrl&quot;:&quot;/uz/uza/image/UZ_Search.png&quot;,&quot;heightTextBoxMatches&quot;:true,&quot;dataPassing&quot;:[{&quot;key&quot;:&quot;serviceType&quot;,&quot;controlName&quot;:&quot;txtServiceType&quot;},{&quot;key&quot;:&quot;serviceTypeName&quot;,&quot;controlName&quot;:&quot;txtServiceTypeName&quot;}]}"><div class="WithLabel TextBoxOuterDiv JSControl FloatLeft marginLeft-XS marginRight-XS controlMargin-M UzCompositeChild" id="txtServiceTypeName" style="width: 405px; height: 20px;" data-control-type="TextBox" data-obj="{&quot;fieldName&quot;:&quot;txtServiceTypeName&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;TextBox&quot;,&quot;width&quot;:&quot;400px&quot;,&quot;selectControlID&quot;:&quot;txtServiceTypeName_core&quot;,&quot;readOnly&quot;:true,&quot;suggest&quot;:[]}"><input tabindex="-1" class="UzTextBox CoreElement text-align-left ime-mode-Hiragana readonlyColor" id="txtServiceTypeName_core" style="width: 400px;" type="text" placeholder=""></div></div></div>                
     
       
       
   
   
   
             <script class="RamlConvert" type="text/javascript">
var DBZ= DBZ? DBZ: {};
DBZ['SERVICETYPEINPUTCOMMONCHILDDIV'] = {};
DBZ['SERVICETYPEINPUTCOMMONCHILDDIV'].ServiceTypeInputCommonChildDivRequest = function(parentFieldName){ 
var paramArray = [];var parameter0 = Uz.JSControlUtil.getJSControl(parentFieldName + '_ServiceTypeInputCommonChildDiv').getProperty();parameter0.txtServiceType = Uz.JSControlUtil.getJSControl(parentFieldName + '_txtServiceType').getProperty();parameter0.btnKensaku = Uz.JSControlUtil.getJSControl(parentFieldName + '_btnKensaku').getProperty();parameter0.txtServiceTypeName = Uz.JSControlUtil.getJSControl(parentFieldName + '_txtServiceTypeName').getProperty();paramArray.push(parameter0);
return paramArray;
 };
</script><script>var DBZ;
(function (DBZ) {
    (function (ServiceTypeInputCommonChildDiv) {
        var Events = (function () {
            function Events() {
            }
            Events.onBlur_txtServiceType = function () {
                return "onBlur_txtServiceType";
            };
            return Events;
        })();
        ServiceTypeInputCommonChildDiv.Events = Events;

        var Controls = (function () {
            function Controls(fieldName) {
                this._myName = fieldName;
            }
            Controls.myType = function () {
                return "ServiceTypeInputCommonChildDiv";
            };

            Controls.prototype.convFiledNameSelf = function () {
                return this._myName + "_" + DBZ.ServiceTypeInputCommonChildDiv.Controls.myType();
            };

            Controls.prototype.convFiledName = function (fieldName) {
                return this._myName + "_" + DBZ.ServiceTypeInputCommonChildDiv.Controls.myType() + "_" + fieldName;
            };

            Controls.prototype.ServiceTypeInputCommonChildDiv = function () {
                return new UZA.Panel(this.convFiledNameSelf());
            };

            Controls.prototype.txtServiceType = function () {
                return new UZA.TextBoxCode(this.convFiledName("txtServiceType"));
            };

            Controls.prototype.btnKensaku = function () {
                return new UZA.ButtonDialog(this.convFiledName("btnKensaku"));
            };

            Controls.prototype.txtServiceTypeName = function () {
                return new UZA.TextBox(this.convFiledName("txtServiceTypeName"));
            };
            return Controls;
        })();
        ServiceTypeInputCommonChildDiv.Controls = Controls;
    })(DBZ.ServiceTypeInputCommonChildDiv || (DBZ.ServiceTypeInputCommonChildDiv = {}));
    var ServiceTypeInputCommonChildDiv = DBZ.ServiceTypeInputCommonChildDiv;
})(DBZ || (DBZ = {}));
var DBZ;
(function (DBZ) {
    (function (ServiceTypeInputCommonChildDiv) {
        var ModeController = (function () {
            function ModeController(fieldName) {
                this.fieldName = fieldName;
                this.controls = new ServiceTypeInputCommonChildDiv.Controls(fieldName);
            }
            ModeController.prototype.priorities = function () {
                return [
                    "State"
                ];
            };
            ModeController.prototype.State = function () {
                return new Modes.State(this.controls);
            };
            ModeController.prototype.Properties = function () {
                return new UZA.CommonChildDiv(this.fieldName);
            };

            ModeController.prototype.PublicProperties = function () {
                return new ServiceTypeInputCommonChildDiv.PublicProperties(this.fieldName);
            };
            return ModeController;
        })();
        ServiceTypeInputCommonChildDiv.ModeController = ModeController;

        (function (Modes) {
            var State = (function () {
                function State(controls) {
                    this.controls = controls;
                }
                State.prototype.入力 = function () {
                    this.controls.txtServiceType().readOnly = false;
                    this.controls.btnKensaku().disabled = false;
                };

                State.prototype.照会 = function () {
                    this.controls.txtServiceType().readOnly = true;
                    this.controls.btnKensaku().disabled = true;
                };
                return State;
            })();
            Modes.State = State;
        })(ServiceTypeInputCommonChildDiv.Modes || (ServiceTypeInputCommonChildDiv.Modes = {}));
        var Modes = ServiceTypeInputCommonChildDiv.Modes;
    })(DBZ.ServiceTypeInputCommonChildDiv || (DBZ.ServiceTypeInputCommonChildDiv = {}));
    var ServiceTypeInputCommonChildDiv = DBZ.ServiceTypeInputCommonChildDiv;
})(DBZ || (DBZ = {}));

var DBZ;
(function (DBZ) {
    (function (ServiceTypeInputCommonChildDiv) {
        var PublicProperties = (function () {
            function PublicProperties(fieldName) {
                this.fieldName = fieldName;
                this.controls = new ServiceTypeInputCommonChildDiv.Controls(fieldName);
            }
            PublicProperties.prototype.getEditTypes = function () {
                var editTypes = new UZA.EditTypeForPublicProperty();

                return editTypes;
            };
            return PublicProperties;
        })();
        ServiceTypeInputCommonChildDiv.PublicProperties = PublicProperties;
    })(DBZ.ServiceTypeInputCommonChildDiv || (DBZ.ServiceTypeInputCommonChildDiv = {}));
    var ServiceTypeInputCommonChildDiv = DBZ.ServiceTypeInputCommonChildDiv;
})(DBZ || (DBZ = {}));
</script></div>
