<div title="" class="JSControl UzCompositeControl  Width-XS FloatLeft" id="defaultLayout" style="margin: 0em;" data-control-type="CommonChildDiv" data-obj="{&quot;fieldName&quot;:&quot;defaultLayout&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;CommonChildDiv&quot;,&quot;width&quot;:&quot;XS&quot;,&quot;visible&quot;:true,&quot;displayNone&quot;:false,&quot;disabled&quot;:false,&quot;accessKey&quot;:&quot;&quot;,&quot;nextFocusFieldName&quot;:&quot;&quot;,&quot;wrap&quot;:false,&quot;float&quot;:0,&quot;toolTip&quot;:&quot;&quot;,&quot;authorityMode&quot;:0,&quot;marginLeft&quot;:&quot;0em&quot;,&quot;marginRight&quot;:&quot;0em&quot;,&quot;selectControlID&quot;:&quot;defaultLayout&quot;,&quot;helpMessageID&quot;:&quot;&quot;,&quot;jpControlName&quot;:&quot;&quot;,&quot;authorityID&quot;:&quot;&quot;,&quot;relation&quot;:[],&quot;packageName&quot;:&quot;&quot;,&quot;businessId&quot;:&quot;DBZ&quot;,&quot;controlName&quot;:&quot;PrintContentsSetting&quot;,&quot;marginTop&quot;:&quot;0em&quot;,&quot;marginBottom&quot;:&quot;0em&quot;,&quot;dataPassingForDialog&quot;:[{&quot;key&quot;:&quot;&quot;,&quot;controlName&quot;:&quot;&quot;}],&quot;dialogOkEventNameForDialog&quot;:&quot;&quot;,&quot;dialogCancelEventNameForDialog&quot;:&quot;&quot;,&quot;dialogCloseEventNameForDialog&quot;:&quot;&quot;,&quot;heightForDialog&quot;:&quot;M&quot;,&quot;firstFocusFieldName&quot;:&quot;&quot;,&quot;lastFocusFieldName&quot;:&quot;&quot;,&quot;modes&quot;:[],&quot;publicEvents&quot;:[],&quot;publicEventsAlias&quot;:[],&quot;responsiveType&quot;:0,&quot;minWidth&quot;:&quot;&quot;,&quot;minHeight&quot;:&quot;&quot;,&quot;widthPercent&quot;:&quot;&quot;,&quot;heightPercent&quot;:&quot;&quot;,&quot;enterKeyAssignedControl&quot;:&quot;&quot;,&quot;EditTypes&quot;:{&quot;_editTypes&quot;:[{&quot;propertyName&quot;:&quot;txtSendData_displayNone&quot;,&quot;editType&quot;:1},{&quot;propertyName&quot;:&quot;PrintContentsSetting_title&quot;,&quot;editType&quot;:0},{&quot;propertyName&quot;:&quot;PrintContentsSetting_eraseBorder&quot;,&quot;editType&quot;:0}]},&quot;txtSendData_displayNone&quot;:true,&quot;PrintContentsSetting_title&quot;:&quot;印字内容設定&quot;,&quot;PrintContentsSetting_eraseBorder&quot;:true}" data-is-composite-control="true" data-control-name="DBZ.PrintContentsSetting"><div title="" class="UzPanel FloatLeft JSControl Panel UzPanelAndText panelMarginTop-M panelMarginBottom-M StateChangable marginLeft-XS marginRight-XS marginTop-Default marginBottom-Default UzCommonChildDivPanel Width-G2 UzCompositeChild" id="PrintContentsSetting" style="width: auto; margin-top: 0px; margin-bottom: 0px;" data-control-type="Panel" data-obj="{&quot;fieldName&quot;:&quot;PrintContentsSetting&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;Panel&quot;,&quot;width&quot;:&quot;G2&quot;,&quot;selectControlID&quot;:&quot;PrintContentsSetting&quot;,&quot;title&quot;:&quot;印字内容設定&quot;,&quot;postParameterPanelNames&quot;:[{&quot;postParameterPanelNames&quot;:&quot;PrintContentsSetting&quot;}],&quot;requestSettings&quot;:[],&quot;hiddenInput&quot;:[],&quot;session&quot;:{},&quot;eraseBorder&quot;:true,&quot;canPost&quot;:true}"><div class="UzPanelHeader" id="PrintContentsSetting_panel_header_area" style="width: auto; display: block;"><span class="closeIconSpan ui-icon ui-icon-circle-close" style="display: none;"></span><span class="iconSpan ui-icon ui-icon-circle-triangle-n" style="visibility: visible;"></span><span class="textSpan">印字内容設定</span><div class="groupBoxBorder" style="display: none;"></div></div><div class="UzPanelBody ui-widget-content panelPadding-M Panel-EraseBoder ui-droppable ui-sortable" id="PrintContentsSetting_panel_body_area"><div title="" class="UzTextBoxDate TextBoxOuterDiv WithLabel FloatLeft JSControl controlMargin-M marginLeft-XS marginRight-XS UzCompositeChild" id="txtIssueDate" style="width: 147px; height: 21px;" data-control-type="TextBoxDate" data-obj="{&quot;fieldName&quot;:&quot;txtIssueDate&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;TextBoxDate&quot;,&quot;width&quot;:&quot;85px&quot;,&quot;selectControlID&quot;:&quot;txtIssueDate_core&quot;,&quot;labelLText&quot;:&quot;発行日&quot;,&quot;labelLWidth&quot;:&quot;55px&quot;}"><span class="word-wrap-break-word Label-L text-align-right" id="txtIssueDate_labelL" style="width: 55px;"><span>発行日</span></span><input class="UzTextBox CoreElement" id="txtIssueDate_core" style="width: 85px;" type="text" placeholder="" data-maxdate="" data-mindate="" data-wareki="" data-seireki="" data-setcount="0" data-orgtext=""></div><div title="" class="UzTextBoxDate TextBoxOuterDiv WithLabel FloatLeft JSControl controlMargin-M marginLeft-XL marginRight-XS UzCompositeChild" id="txtSendDate" style="width: 147px; height: 21px;" data-control-type="TextBoxDate" data-obj="{&quot;fieldName&quot;:&quot;txtSendDate&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;TextBoxDate&quot;,&quot;width&quot;:&quot;85px&quot;,&quot;displayNone&quot;:true,&quot;marginLeft&quot;:&quot;XL&quot;,&quot;selectControlID&quot;:&quot;txtSendDate_core&quot;,&quot;labelLText&quot;:&quot;送付日&quot;,&quot;labelLWidth&quot;:&quot;55px&quot;}"><span class="word-wrap-break-word Label-L text-align-right" id="txtSendDate_labelL" style="width: 55px;"><span>送付日</span></span><input class="UzTextBox CoreElement" id="txtSendDate_core" style="width: 85px;" type="text" placeholder="" data-maxdate="" data-mindate="" data-wareki="" data-seireki="" data-setcount="0" data-orgtext=""></div></div></div> 
<script type="text/javascript">var __extends = this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    __.prototype = b.prototype;
    d.prototype = new __();
};
var DBZ;
(function (DBZ) {
    var PrintContentsSetting_Design = (function (_super) {
        __extends(PrintContentsSetting_Design, _super);
        function PrintContentsSetting_Design($parentElement, isDesignMode, fieldName) {
            _super.call(this, $parentElement, isDesignMode, PrintContentsSetting_Design.myLayout, fieldName);
        }
        Object.defineProperty(PrintContentsSetting_Design.prototype, "txtSendData_displayNone", {
            get: function () {
                return Uz.JSControlUtil.getJSControl(this.fieldName + "_" + this.layout.items[0]["fieldName"] + "_" + this.layout.items[0].items[1]["fieldName"])["displayNone"];
            },
            set: function (value) {
                if ($("#" + this.fieldName + "_" + this.layout.items[0]["fieldName"] + "_" + this.layout.items[0].items[1]["fieldName"]).length > 0 && Uz.JSControlUtil.getJSControl(this.fieldName + "_" + this.layout.items[0]["fieldName"] + "_" + this.layout.items[0].items[1]["fieldName"]) != undefined) {
                    Uz.JSControlUtil.getJSControl(this.fieldName + "_" + this.layout.items[0]["fieldName"] + "_" + this.layout.items[0].items[1]["fieldName"])["displayNone"] = value;
                } else {
                    this.layout.items[0].items[1]["displayNone"] = value;
                    this.raisePropertyChanged(this.layout);
                }
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(PrintContentsSetting_Design.prototype, "PrintContentsSetting_title", {
            get: function () {
                return Uz.JSControlUtil.getJSControl(this.fieldName + "_" + this.layout.items[0]["fieldName"])["title"];
            },
            set: function (value) {
                if ($("#" + this.fieldName + "_" + this.layout.items[0]["fieldName"]).length > 0 && Uz.JSControlUtil.getJSControl(this.fieldName + "_" + this.layout.items[0]["fieldName"]) != undefined) {
                    Uz.JSControlUtil.getJSControl(this.fieldName + "_" + this.layout.items[0]["fieldName"])["title"] = value;
                } else {
                    this.layout.items[0]["title"] = value;
                    this.raisePropertyChanged(this.layout);
                }
            },
            enumerable: true,
            configurable: true
        });


        Object.defineProperty(PrintContentsSetting_Design.prototype, "PrintContentsSetting_eraseBorder", {
            get: function () {
                return Uz.JSControlUtil.getJSControl(this.fieldName + "_" + this.layout.items[0]["fieldName"])["eraseBorder"];
            },
            set: function (value) {
                if ($("#" + this.fieldName + "_" + this.layout.items[0]["fieldName"]).length > 0 && Uz.JSControlUtil.getJSControl(this.fieldName + "_" + this.layout.items[0]["fieldName"]) != undefined) {
                    Uz.JSControlUtil.getJSControl(this.fieldName + "_" + this.layout.items[0]["fieldName"])["eraseBorder"] = value;
                } else {
                    this.layout.items[0]["eraseBorder"] = value;
                    this.raisePropertyChanged(this.layout);
                }
            },
            enumerable: true,
            configurable: true
        });


        PrintContentsSetting_Design.prototype.registProperty = function () {
            _super.prototype.registProperty.call(this);
            Uz.JSControlUtil.registProperty("txtSendData_displayNone");
            Uz.JSControlUtil.registProperty("PrintContentsSetting_title");
            Uz.JSControlUtil.registProperty("PrintContentsSetting_eraseBorder");
        };

        PrintContentsSetting_Design.prototype.getEditablePropertyInfo = function () {
            var editablePropertyInfo = _super.prototype.getEditablePropertyInfo.call(this);
            editablePropertyInfo["txtSendData_displayNone"] = Uz.JSControlUtil.getJSControl(this.fieldName + "_" + this.layout.items[0]["fieldName"] + "_" + this.layout.items[0].items[1]["fieldName"]).getEditablePropertyInfo()["displayNone"];
            editablePropertyInfo["PrintContentsSetting_title"] = Uz.JSControlUtil.getJSControl(this.fieldName + "_" + this.layout.items[0]["fieldName"]).getEditablePropertyInfo()["title"];
            editablePropertyInfo["PrintContentsSetting_eraseBorder"] = Uz.JSControlUtil.getJSControl(this.fieldName + "_" + this.layout.items[0]["fieldName"]).getEditablePropertyInfo()["eraseBorder"];

            return editablePropertyInfo;
        };
        PrintContentsSetting_Design.myLayout = {
            "fieldName": "defaultLayout",
            "items": [
                {
                    "fieldName": "PrintContentsSetting",
                    "items": [
                        {
                            "fieldName": "txtIssueDate",
                            "items": [],
                            "controlType": "TextBoxDate",
                            "width": "85px",
                            "visible": true,
                            "displayNone": false,
                            "disabled": false,
                            "accessKey": "",
                            "nextFocusFieldName": "",
                            "wrap": false,
                            "dependencies": [],
                            "float": 0,
                            "toolTip": "",
                            "authorityMode": 0,
                            "marginLeft": "XS",
                            "marginRight": "XS",
                            "selectControlID": "txtIssueDate_core",
                            "helpMessageID": "",
                            "jpControlName": "",
                            "readOnly": false,
                            "required": false,
                            "placeHolder": "",
                            "isPrivateInfo": false,
                            "isPassword": false,
                            "onFocus": "",
                            "onBlur": "",
                            "onChange": "",
                            "onKeyPress": "",
                            "text": "",
                            "value": "",
                            "labelLText": "発行日",
                            "labelRText": "",
                            "labelLWidth": "55px",
                            "labelRWidth": "S",
                            "labelLAlign": 2,
                            "labelRAlign": 0,
                            "decorationClass": "",
                            "ymdKubun": 2,
                            "displayFormat": 0,
                            "permitCharactor": "./_-"
                        },
                        {
                            "fieldName": "txtSendDate",
                            "items": [],
                            "controlType": "TextBoxDate",
                            "width": "85px",
                            "visible": true,
                            "displayNone": true,
                            "disabled": false,
                            "accessKey": "",
                            "nextFocusFieldName": "",
                            "wrap": false,
                            "dependencies": [],
                            "float": 0,
                            "toolTip": "",
                            "authorityMode": 0,
                            "marginLeft": "XL",
                            "marginRight": "XS",
                            "selectControlID": "txtSendDate_core",
                            "helpMessageID": "",
                            "jpControlName": "",
                            "readOnly": false,
                            "required": false,
                            "placeHolder": "",
                            "isPrivateInfo": false,
                            "isPassword": false,
                            "onFocus": "",
                            "onBlur": "",
                            "onChange": "",
                            "onKeyPress": "",
                            "text": "",
                            "value": "",
                            "labelLText": "送付日",
                            "labelRText": "",
                            "labelLWidth": "55px",
                            "labelRWidth": "S",
                            "labelLAlign": 2,
                            "labelRAlign": 0,
                            "decorationClass": "",
                            "ymdKubun": 2,
                            "displayFormat": 0,
                            "permitCharactor": "./_-"
                        }
                    ],
                    "controlType": "Panel",
                    "width": "G2",
                    "visible": true,
                    "displayNone": false,
                    "disabled": false,
                    "accessKey": "",
                    "nextFocusFieldName": "",
                    "wrap": false,
                    "dependencies": [],
                    "float": 0,
                    "toolTip": "",
                    "authorityMode": 0,
                    "marginLeft": "XS",
                    "marginRight": "XS",
                    "selectControlID": "PrintContentsSetting",
                    "helpMessageID": "",
                    "jpControlName": "",
                    "onLoad": "",
                    "title": "印字内容設定",
                    "marginTop": "Default",
                    "marginBottom": "Default",
                    "isOpen": true,
                    "canOpenAndClose": true,
                    "postParameterPanelNames": [],
                    "requestSettings": [],
                    "hiddenInput": [],
                    "onOpen": "",
                    "onClose": "",
                    "session": {},
                    "eraseBorder": true,
                    "backgroundColor": 0,
                    "widthAuto": true,
                    "panelDisplay": 0,
                    "isGroupBox": false,
                    "readOnly": false,
                    "height": "Auto",
                    "canPost": true
                }
            ],
            "controlType": "CommonChildDiv",
            "width": "XS",
            "visible": true,
            "displayNone": false,
            "disabled": false,
            "accessKey": "",
            "nextFocusFieldName": "",
            "wrap": false,
            "dependencies": [],
            "float": 0,
            "toolTip": "",
            "authorityMode": 0,
            "marginLeft": "0em",
            "marginRight": "0em",
            "selectControlID": "defaultLayout",
            "helpMessageID": "",
            "jpControlName": "",
            "relation": [],
            "packageName": "",
            "businessId": "DBZ",
            "controlName": "PrintContentsSetting",
            "marginTop": "0em",
            "marginBottom": "0em",
            "originalProperty": [
                {
                    "publicChildFieldName": "txtSendDate",
                    "publicChildProperty": "displayNone",
                    "newPropertyName": "txtSendData_displayNone"
                },
                {
                    "publicChildFieldName": "PrintContentsSetting",
                    "publicChildProperty": "title",
                    "newPropertyName": "PrintContentsSetting_title"
                },
                {
                    "publicChildFieldName": "PrintContentsSetting",
                    "publicChildProperty": "eraseBorder",
                    "newPropertyName": "PrintContentsSetting_eraseBorder"
                }
            ],
            "dataPassingForDialog": [
                {
                    "key": "",
                    "controlName": ""
                }
            ],
            "dialogOkEventNameForDialog": "",
            "dialogCancelEventNameForDialog": "",
            "canTransferEvent": true,
            "heightForDialog": "M",
            "firstFocusFieldName": "",
            "lastFocusFieldName": "",
            "modes": [],
            "publicEvents": [],
            "publicEventsAlias": []
        };
        return PrintContentsSetting_Design;
    })(Uz.CommonChildDiv);
    DBZ.PrintContentsSetting_Design = PrintContentsSetting_Design;

    (function (PrintContentsSetting) {
        var Events = (function () {
            function Events() {
            }
            return Events;
        })();
        PrintContentsSetting.Events = Events;

        var Controls = (function () {
            function Controls(fieldName) {
                this._myName = fieldName;
            }
            Controls.myType = function () {
                return "PrintContentsSetting";
            };

            Controls.prototype.convFiledNameSelf = function () {
                return this._myName + "_" + DBZ.PrintContentsSetting.Controls.myType();
            };

            Controls.prototype.convFiledName = function (fieldName) {
                return this._myName + "_" + fieldName;
            };

            Controls.prototype.PrintContentsSetting = function () {
                return new UZA.Panel(this.convFiledNameSelf());
            };

            Controls.prototype.txtIssueDate = function () {
                return new UZA.TextBoxDate(this.convFiledName("txtIssueDate"));
            };

            Controls.prototype.txtSendDate = function () {
                return new UZA.TextBoxDate(this.convFiledName("txtSendDate"));
            };
            return Controls;
        })();
        PrintContentsSetting.Controls = Controls;
    })(DBZ.PrintContentsSetting || (DBZ.PrintContentsSetting = {}));
    var PrintContentsSetting = DBZ.PrintContentsSetting;
})(DBZ || (DBZ = {}));

var DBZ;
(function (DBZ) {
    (function (PrintContentsSetting) {
        var ModeController = (function () {
            function ModeController(fieldName) {
                this.fieldName = fieldName;
                this.controls = new PrintContentsSetting.Controls(fieldName);
            }
            ModeController.prototype.priorities = function () {
                return [];
            };

            ModeController.prototype.Properties = function () {
                return new UZA.CommonChildDiv(this.fieldName);
            };
            return ModeController;
        })();
        PrintContentsSetting.ModeController = ModeController;
    })(DBZ.PrintContentsSetting || (DBZ.PrintContentsSetting = {}));
    var PrintContentsSetting = DBZ.PrintContentsSetting;
})(DBZ || (DBZ = {}));

var DBZ;
(function (DBZ) {
    (function (PrintContentsSetting) {
        var PublicProperties = (function () {
            function PublicProperties(fieldName) {
                this.controls = new PrintContentsSetting.Controls(fieldName);
            }
            PublicProperties.prototype.getEditTypes = function () {
                var editTypes = new UZA.EditTypeForPublicProperty();

                editTypes.addEditType("txtSendData_displayNone", UZA.EditTypeEnumForPublicProperty.BooleanType);
                editTypes.addEditType("PrintContentsSetting_title", UZA.EditTypeEnumForPublicProperty.StringType);
                editTypes.addEditType("PrintContentsSetting_eraseBorder", UZA.EditTypeEnumForPublicProperty.StringType);
                return editTypes;
            };

            PublicProperties.prototype.gettxtSendData_displayNone = function () {
                return this.controls.txtSendDate().displayNone;
            };

            PublicProperties.prototype.settxtSendData_displayNone = function (value) {
                this.controls.txtSendDate().displayNone = value;
            };

            PublicProperties.prototype.getPrintContentsSetting_title = function () {
                return this.controls.PrintContentsSetting().title;
            };

            PublicProperties.prototype.setPrintContentsSetting_title = function (value) {
                this.controls.PrintContentsSetting().title = value;
            };

            PublicProperties.prototype.getPrintContentsSetting_eraseBorder = function () {
                return this.controls.PrintContentsSetting().eraseBorder;
            };

            PublicProperties.prototype.setPrintContentsSetting_eraseBorder = function (value) {
                this.controls.PrintContentsSetting().eraseBorder = value;
            };
            return PublicProperties;
        })();
        PrintContentsSetting.PublicProperties = PublicProperties;
    })(DBZ.PrintContentsSetting || (DBZ.PrintContentsSetting = {}));
    var PrintContentsSetting = DBZ.PrintContentsSetting;
})(DBZ || (DBZ = {}));
</script>
  
   
   <script class="RamlConvert" type="text/javascript">
var DBZ= DBZ? DBZ: {};
DBZ['PRINTCONTENTSSETTING'] = {};
DBZ['PRINTCONTENTSSETTING'].PrintContentsSettingRequest = function(parentFieldName){ 
var paramArray = [];var parameter0 = Uz.JSControlUtil.getJSControl(parentFieldName + '_PrintContentsSetting').getProperty();parameter0.txtIssueDate = Uz.JSControlUtil.getJSControl(parentFieldName + '_txtIssueDate').getProperty();parameter0.txtSendDate = Uz.JSControlUtil.getJSControl(parentFieldName + '_txtSendDate').getProperty();paramArray.push(parameter0);
return paramArray;
 };
</script><script>var DBZ;
(function (DBZ) {
    (function (PrintContentsSetting) {
        var Events = (function () {
            function Events() {
            }
            return Events;
        })();
        PrintContentsSetting.Events = Events;

        var Controls = (function () {
            function Controls(fieldName) {
                this._myName = fieldName;
            }
            Controls.myType = function () {
                return "PrintContentsSetting";
            };

            Controls.prototype.convFiledNameSelf = function () {
                return this._myName + "_" + DBZ.PrintContentsSetting.Controls.myType();
            };

            Controls.prototype.convFiledName = function (fieldName) {
                return this._myName + "_" + DBZ.PrintContentsSetting.Controls.myType() + "_" + fieldName;
            };

            Controls.prototype.PrintContentsSetting = function () {
                return new UZA.Panel(this.convFiledNameSelf());
            };

            Controls.prototype.txtIssueDate = function () {
                return new UZA.TextBoxDate(this.convFiledName("txtIssueDate"));
            };

            Controls.prototype.txtSendDate = function () {
                return new UZA.TextBoxDate(this.convFiledName("txtSendDate"));
            };
            return Controls;
        })();
        PrintContentsSetting.Controls = Controls;
    })(DBZ.PrintContentsSetting || (DBZ.PrintContentsSetting = {}));
    var PrintContentsSetting = DBZ.PrintContentsSetting;
})(DBZ || (DBZ = {}));
var DBZ;
(function (DBZ) {
    (function (PrintContentsSetting) {
        var ModeController = (function () {
            function ModeController(fieldName) {
                this.fieldName = fieldName;
                this.controls = new PrintContentsSetting.Controls(fieldName);
            }
            ModeController.prototype.priorities = function () {
                return [];
            };

            ModeController.prototype.Properties = function () {
                return new UZA.CommonChildDiv(this.fieldName);
            };

            ModeController.prototype.PublicProperties = function () {
                return new PrintContentsSetting.PublicProperties(this.fieldName);
            };
            return ModeController;
        })();
        PrintContentsSetting.ModeController = ModeController;
    })(DBZ.PrintContentsSetting || (DBZ.PrintContentsSetting = {}));
    var PrintContentsSetting = DBZ.PrintContentsSetting;
})(DBZ || (DBZ = {}));

var DBZ;
(function (DBZ) {
    (function (PrintContentsSetting) {
        var PublicProperties = (function () {
            function PublicProperties(fieldName) {
                this.controls = new PrintContentsSetting.Controls(fieldName);
            }
            PublicProperties.prototype.getEditTypes = function () {
                var editTypes = new UZA.EditTypeForPublicProperty();

                editTypes.addEditType("txtSendData_displayNone", UZA.EditTypeEnumForPublicProperty.BooleanType);
                editTypes.addEditType("PrintContentsSetting_title", UZA.EditTypeEnumForPublicProperty.StringType);
                editTypes.addEditType("PrintContentsSetting_eraseBorder", UZA.EditTypeEnumForPublicProperty.StringType);
                return editTypes;
            };

            PublicProperties.prototype.gettxtSendData_displayNone = function () {
                return this.controls.txtSendDate().displayNone;
            };

            PublicProperties.prototype.settxtSendData_displayNone = function (value) {
                this.controls.txtSendDate().displayNone = value;
            };

            PublicProperties.prototype.getPrintContentsSetting_title = function () {
                return this.controls.PrintContentsSetting().title;
            };

            PublicProperties.prototype.setPrintContentsSetting_title = function (value) {
                this.controls.PrintContentsSetting().title = value;
            };

            PublicProperties.prototype.getPrintContentsSetting_eraseBorder = function () {
                return this.controls.PrintContentsSetting().eraseBorder;
            };

            PublicProperties.prototype.setPrintContentsSetting_eraseBorder = function (value) {
                this.controls.PrintContentsSetting().eraseBorder = value;
            };
            return PublicProperties;
        })();
        PrintContentsSetting.PublicProperties = PublicProperties;
    })(DBZ.PrintContentsSetting || (DBZ.PrintContentsSetting = {}));
    var PrintContentsSetting = DBZ.PrintContentsSetting;
})(DBZ || (DBZ = {}));
</script></div>
