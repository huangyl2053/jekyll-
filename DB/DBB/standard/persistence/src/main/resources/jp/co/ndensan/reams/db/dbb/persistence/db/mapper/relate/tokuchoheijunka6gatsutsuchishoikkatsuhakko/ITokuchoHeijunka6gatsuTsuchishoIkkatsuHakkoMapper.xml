<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- @reamsid_L DBB-0820-040 xuyue -->


<mapper namespace="jp.co.ndensan.reams.db.dbb.persistence.db.mapper.tokuchoheijunka6gatsutsuchishoikkatsuhakko.ITokuchoHeijunka6gatsuTsuchishoIkkatsuHakkoMapper">
    <!--    <select id="get基準日時"
                resultType="jp.co.ndensan.reams.db.dbb.entity.TokuchoHeijunka6gatsuTsuchishoIkkatsuHakko_sqlresultEntity"
                parameterType="jp.co.ndensan.reams.db.dbb.entity.TokuchoHeijunka6gatsuTsuchishoIkkatsuHakko_sqlparamEntity" fetchSize="500">
        SELECT MAX(A."kijunTimestamp") AS "基準日時"
        FROM   rgdb."DbT7022ShoriDateKanri" AS A
        WHERE  A."subGyomuCode"=#{subgyomucode}
        AND    A."nendo"=#{年度}
        AND    A."shoriName"=#{処理名}
    </select>-->

    <resultMap id="resultMap_koshingoAndRealData" type="jp.co.ndensan.reams.db.dbb.entity.db.relate.tokuchoheijunka6gatsutsuchishoikkatsuhakko.DbT2002FukaTempEntity" autoMapping="true">
        <!--        <id column="dbT2003Kibetsu_choteiNendo" typeHandler="jp.co.ndensan.reams.uz.uza.util.db.typehandlers.FlexibleYearTypeHandler" />
        <id column="dbT2003Kibetsu_fukaNendo" typeHandler="jp.co.ndensan.reams.uz.uza.util.db.typehandlers.FlexibleYearTypeHandler" />
        <id column="dbT2003Kibetsu_tsuchishoNo" typeHandler="jp.co.ndensan.reams.db.dbx.entity.typehandlers.TsuchishoNoTypeHandler" />-->
        <association property="宛名Entity" resultMap="jp.co.ndensan.reams.ua.uax.persistence.db.mapper.IUaFt200FindShikibetsuTaishoFunctionMapper.UaFt200FindShikibetsuTaishoEntity" />
        <association property="宛先Entity" resultMap="jp.co.ndensan.reams.ua.uax.persistence.db.mapper.IUaFt250FindAtesakiMapper.resultAtesakiEntity" />
        <association property="納組Entity" resultMap="jp.co.ndensan.reams.ca.cax.persistence.db.mapper.ICaFt703FindNokumiFunctionMapper.nokumiResult" />
        <association property="口座Entity" resultMap="jp.co.ndensan.reams.ua.uax.persistence.db.mapper.IUaFt310FindKozaFunctionMapper.kozaResult" />
        <association property="更正後対象者Entity" resultMap="jp.co.ndensan.reams.ue.uex.entity.db.basic.UeT0511NenkinTokuchoKaifuJohoEntity" />
        <association property="更正前対象者Entity" resultMap="jp.co.ndensan.reams.ue.uex.entity.db.basic.UeT0511NenkinTokuchoKaifuJohoEntity" />
    </resultMap>

    <select id="select特徴平準化_6月分更新後とリアルのデータ"
            resultMap="resultMap_koshingoAndRealData"
            parameterType="jp.co.ndensan.reams.db.dbb.definition.mybatisprm.tokuchoheijunka6gatsutsuchishoikkatsuhakko.TokuchoHeijunka6gatsuMyBatisParameter" fetchSize="500">
        SELECT
        <include refid="jp.co.ndensan.reams.db.dbb.persistence.db.mapper.tokuchoheijunka6gatsutsuchishoikkatsuhakko.ITokuchoHeijunka6gatsuTsuchishoIkkatsuHakkoMapper.allColumns_DbT2015KeisangoJohoTemp"/>,  <!--計算後情報-->
        <include refid="jp.co.ndensan.reams.ua.uax.persistence.db.mapper.IUaFt200FindShikibetsuTaishoFunctionMapper.columns_ShikibetsuTaisho" />,   <!--宛名全項目-->
        <include refid="jp.co.ndensan.reams.ua.uax.persistence.db.mapper.IUaFt250FindAtesakiMapper.columns_Atesaki" />,  <!--宛先全項目-->
        <include refid="jp.co.ndensan.reams.ca.cax.persistence.db.mapper.ICaFt703FindNokumiFunctionMapper.columns_Nokumi" />,  <!--納組全項目-->
        <include refid="jp.co.ndensan.reams.ua.uax.persistence.db.mapper.IUaFt310FindKozaFunctionMapper.kozaResult" />, <!-- 口座 -->
        年金特徴回付情報.*

        FROM
        rgdb."DbT2015KeisangoJohoTemp" AS 計算後情報
        INNER JOIN
        <include refid="jp.co.ndensan.reams.ua.uax.persistence.db.mapper.IUaFt200FindShikibetsuTaishoFunctionMapper.tableName_PsmParamClassShikibetsuTaisho" />
        AS <include refid="jp.co.ndensan.reams.ua.uax.persistence.db.mapper.IUaFt200FindShikibetsuTaishoFunctionMapper.as_ShikibetsuTaisho" />    <!--"ShikibetsuTaisho"  宛名-->
        ON  <include refid="jp.co.ndensan.reams.ua.uax.persistence.db.mapper.IUaFt200FindShikibetsuTaishoFunctionMapper.as_ShikibetsuTaisho" />."ShikibetsuTaisho_shikibetsuCode" = 計算後情報."shikibetsuCode"
        INNER JOIN
        <include refid="jp.co.ndensan.reams.ua.uax.persistence.db.mapper.IUaFt250FindAtesakiMapper.tableName_PsmParamClassAtesaki" />
        AS  <include refid="jp.co.ndensan.reams.ua.uax.persistence.db.mapper.IUaFt250FindAtesakiMapper.as_Atesaki" />     <!--"Atesaki"  宛先-->
        ON  <include refid="jp.co.ndensan.reams.ua.uax.persistence.db.mapper.IUaFt250FindAtesakiMapper.as_Atesaki" />."Atesaki_shikibetsuCode" = 計算後情報."shikibetsuCode"
        LEFT JOIN
        <include refid="jp.co.ndensan.reams.ca.cax.persistence.db.mapper.ICaFt703FindNokumiFunctionMapper.tableName_PsmNokumi" />
        AS　<include refid="jp.co.ndensan.reams.ca.cax.persistence.db.mapper.ICaFt703FindNokumiFunctionMapper.as_Nokumi" />  <!--  納組-->
        ON  <include refid="jp.co.ndensan.reams.ca.cax.persistence.db.mapper.ICaFt703FindNokumiFunctionMapper.as_Nokumi" /> ."CaT0714shikibetsuCode" = 計算後情報."shikibetsuCode"
        LEFT JOIN
        <include refid="jp.co.ndensan.reams.ua.uax.persistence.db.mapper.IUaFt310FindKozaFunctionMapper.tableName_PsmKoza" />
        AS　<include refid="jp.co.ndensan.reams.ua.uax.persistence.db.mapper.IUaFt310FindKozaFunctionMapper.as_Koza" />  <!-- "Koza" 口座 -->
        ON   <include refid="jp.co.ndensan.reams.ua.uax.persistence.db.mapper.IUaFt310FindKozaFunctionMapper.as_Koza" />."Koza_shikibetsuCode" = 計算後情報."shikibetsuCode"
        INNER JOIN
        rgdb."UeT0511NenkinTokuchoKaifuJoho" AS 年金特徴回付情報
        ON   年金特徴回付情報."gyomuCode" = "DBB"
        AND  年金特徴回付情報."shoriNendo"　＝　#{調定年度} - 1
        AND  年金特徴回付情報."tsuchiNaiyoCode" IN
        <foreach item="通知内容コード" index="index" collection="通知内容コード" open="(" separator="," close=")">
            #{通知内容コード}
        </foreach>
        AND  計算後情報."kariNenkinNo" = 年金特徴回付情報."kisoNenkinNo"
        AND  計算後情報."kariNenkinCode" = 年金特徴回付情報."nenkinCode"
        AND  計算後情報."kariHosokuM" = 年金特徴回付情報."hosokuTsuki"
        WHERE
        計算後情報."choteiNendo" = #{調定年度}
        AND  計算後情報."fukaNendo" = #{調定年度}
        AND  計算後情報."koseiZengoKubun" = '2'
        AND  計算後情報."tkKibetsuGaku01" != 0
        AND  計算後情報."tkKibetsuGaku02" != 0
        AND  計算後情報."tkKibetsuGaku03" != 0
    </select>

    <update id="update仮算定額変更情報一時テーブルの計算後情報更正前情報1"
            resultType="jp.co.ndensan.reams.db.dbb.entity.TokuchoHeijunka6gatsuTsuchishoIkkatsuHakko_sqlresultEntity"
            parameterType="jp.co.ndensan.reams.db.dbb.entity.TokuchoHeijunka6gatsuTsuchishoIkkatsuHakko_sqlparamEntity" fetchSize="500">
        <!-- TODO 表の結合が間違い #74487 -->
        UPDATE  rgdb."DbT2002FukaTemp" AS "DbT2002FukaTemp"
        SET    「更正前」計算後情報の全項目　　＝　計算後情報．同じ名称の項目
        更正前情報有無区分　　＝　「1」　：あり
        WHERE  "DbT2002FukaTemp"．調定年度　＝　計算後情報一時．調定年度
        AND	仮算定額変更情報一時テーブル．賦課年度　＝　計算後情報一時．賦課年度
        AND	仮算定額変更情報一時テーブル．通知書番号　＝　計算後情報一時．通知書番号
        AND	更正前後区分　＝　「1：更正前」
    </update>

    <select id="select特徴平準化_6月分更新後のデータ"
            resultType="jp.co.ndensan.reams.db.dbb.entity.TokuchoHeijunka6gatsuTsuchishoIkkatsuHakko_sqlresultEntity"
            parameterType="jp.co.ndensan.reams.db.dbb.entity.TokuchoHeijunka6gatsuTsuchishoIkkatsuHakko_sqlparamEntity" fetchSize="500">
        SELECT
        <include refid="jp.co.ndensan.reams.db.dbb.persistence.db.mapper.tokuchoheijunka6gatsutsuchishoikkatsuhakko.ITokuchoHeijunka6gatsuTsuchishoIkkatsuHakkoMapper.allColumns_DbT2015KeisangoJohoTemp"/>,  <!--計算後情報-->
        <include refid="jp.co.ndensan.reams.ua.uax.persistence.db.mapper.IUaFt200FindShikibetsuTaishoFunctionMapper.columns_ShikibetsuTaisho" />,   <!--宛名全項目-->
        <include refid="jp.co.ndensan.reams.ua.uax.persistence.db.mapper.IUaFt250FindAtesakiMapper.columns_Atesaki" />,  <!--宛先全項目-->
        <include refid="jp.co.ndensan.reams.ca.cax.persistence.db.mapper.ICaFt703FindNokumiFunctionMapper.columns_Nokumi" />,  <!--納組全項目-->
        <include refid="jp.co.ndensan.reams.ua.uax.persistence.db.mapper.IUaFt310FindKozaFunctionMapper.kozaResult" />, <!-- 口座 -->
        年金特徴回付情報.*

        FROM
        rgdb."DbT2015KeisangoJohoTemp" AS 計算後情報  <!--  上記と違う条件  -->
        INNER JOIN
        <include refid="jp.co.ndensan.reams.ua.uax.persistence.db.mapper.IUaFt200FindShikibetsuTaishoFunctionMapper.tableName_PsmParamClassShikibetsuTaisho" />
        AS <include refid="jp.co.ndensan.reams.ua.uax.persistence.db.mapper.IUaFt200FindShikibetsuTaishoFunctionMapper.as_ShikibetsuTaisho" />    <!--"ShikibetsuTaisho"  宛名-->
        ON  <include refid="jp.co.ndensan.reams.ua.uax.persistence.db.mapper.IUaFt200FindShikibetsuTaishoFunctionMapper.as_ShikibetsuTaisho" />."ShikibetsuTaisho_shikibetsuCode" = 計算後情報."shikibetsuCode"
        INNER JOIN
        <include refid="jp.co.ndensan.reams.ua.uax.persistence.db.mapper.IUaFt250FindAtesakiMapper.tableName_PsmParamClassAtesaki" />
        AS  <include refid="jp.co.ndensan.reams.ua.uax.persistence.db.mapper.IUaFt250FindAtesakiMapper.as_Atesaki" />     <!--"Atesaki"  宛先-->
        ON  <include refid="jp.co.ndensan.reams.ua.uax.persistence.db.mapper.IUaFt250FindAtesakiMapper.as_Atesaki" />."Atesaki_shikibetsuCode" = 計算後情報."shikibetsuCode"
        LEFT JOIN
        <include refid="jp.co.ndensan.reams.ca.cax.persistence.db.mapper.ICaFt703FindNokumiFunctionMapper.tableName_PsmNokumi" />
        AS　<include refid="jp.co.ndensan.reams.ca.cax.persistence.db.mapper.ICaFt703FindNokumiFunctionMapper.as_Nokumi" />  <!--  納組-->
        ON  <include refid="jp.co.ndensan.reams.ca.cax.persistence.db.mapper.ICaFt703FindNokumiFunctionMapper.as_Nokumi" /> ."CaT0714shikibetsuCode" = 計算後情報."shikibetsuCode"
        LEFT JOIN
        <include refid="jp.co.ndensan.reams.ua.uax.persistence.db.mapper.IUaFt310FindKozaFunctionMapper.tableName_PsmKoza" />
        AS　<include refid="jp.co.ndensan.reams.ua.uax.persistence.db.mapper.IUaFt310FindKozaFunctionMapper.as_Koza" />  <!-- "Koza" 口座 -->
        ON   <include refid="jp.co.ndensan.reams.ua.uax.persistence.db.mapper.IUaFt310FindKozaFunctionMapper.as_Koza" />."Koza_shikibetsuCode" = 計算後情報."shikibetsuCode"
        INNER JOIN
        rgdb."UeT0511NenkinTokuchoKaifuJoho" AS 年金特徴回付情報
        ON   年金特徴回付情報."gyomuCode" = "DBB"
        AND  年金特徴回付情報."shoriNendo"　＝　#{調定年度} - 1
        AND  年金特徴回付情報."tsuchiNaiyoCode" IN
        <foreach item="通知内容コード" index="index" collection="通知内容コード" open="(" separator="," close=")">
            #{通知内容コード}
        </foreach>
        AND  計算後情報."kariNenkinNo" = 年金特徴回付情報."kisoNenkinNo"
        AND  計算後情報."kariNenkinCode" = 年金特徴回付情報."nenkinCode"
        AND  計算後情報."kariHosokuM" = 年金特徴回付情報."hosokuTsuki"
        WHERE
        計算後情報."choteiNendo" = #{調定年度}
        AND  計算後情報."fukaNendo" = #{調定年度}
        AND  計算後情報."koseiZengoKubun" = '2'
        AND  計算後情報."sakuseiShoriName" != #{作成処理名}	<!--  上記と違う条件  -->
        AND  計算後情報."tkKibetsuGaku01" != 0
        AND  計算後情報."tkKibetsuGaku02" != 0
        AND  計算後情報."tkKibetsuGaku03" != 0
    </select>



    <select id="select出力対象情報" resultType="jp.co.ndensan.reams.db.dbb.entity.db.relate.tokuchoheijunka6gatsutsuchishoikkatsuhakko.DbT2002FukaTempEntity"
            parameterType="jp.co.ndensan.reams.db.dbb.entity.dbbbt35003.ChohyoHakkoEntity"
            fetchSize="500">
        SELECT *
        FROM DbT2002FukaTemp
        WHERE
        1 = 1
        <if test="出力対象区分==1">
            1 = 1
        </if>
        <if test="出力対象区分==2">
            "hihokenshaKubun" = '0'
        </if>
        <if test="出力対象区分==3">
            "hihokenshaKubun" = '1' OR "hihokenshaKubun" = '2'
        </if>
        ORDER BY #{出力順}
    </select>










    <update id="update仮算定額変更情報一時テーブルの計算後情報更正前情報2"
            resultType="jp.co.ndensan.reams.db.dbb.entity.TokuchoHeijunka6gatsuTsuchishoIkkatsuHakko_sqlresultEntity"
            parameterType="jp.co.ndensan.reams.db.dbb.entity.TokuchoHeijunka6gatsuTsuchishoIkkatsuHakko_sqlparamEntity" fetchSize="500">
        UPDATE  仮算定額変更通知書一括発行一時テーブ
        SET    「更正前」計算後情報の全項目　　＝　計算後情報．同じ名称の項目
        更正前情報有無区分　　＝　「1」　：あり
        WHERE 	仮算定額変更情報一時テーブル．調定年度　＝　計算後情報．調定年度
        AND	仮算定額変更情報一時テーブル．賦課年度　＝　計算後情報．賦課年度
        AND	仮算定額変更情報一時テーブル．通知書番号　＝　計算後情報．通知書番号
        AND	更正前後区分　＝　「1：更正前」
        AND	作成処理名　＝　DBZ介護賦課．Enum．処理名．特徴平準化計算_6月分



    </update>
    <update id="update更正前の対象者_追加含む_情報"
            resultType="jp.co.ndensan.reams.db.dbb.entity.TokuchoHeijunka6gatsuTsuchishoIkkatsuHakko_sqlresultEntity"
            parameterType="jp.co.ndensan.reams.db.dbb.entity.TokuchoHeijunka6gatsuTsuchishoIkkatsuHakko_sqlparamEntity" fetchSize="500">
        UPDATE  仮算定額変更情報一時テーブル
        SET    「更正後」対象者（追加含む）情報の項目　　＝　年金特徴回付情報（介護継承）．同じ名称の項目
        WHERE  「更正前」賦課情報.仮徴収・基礎年金番号　＝　年金特徴回付情報（介護継承）. 基礎年金番号
        AND 	計算後情報.仮徴収・年金コード　＝　年金特徴回付情報（介護継承）. 年金コード
        AND 	計算後情報.仮徴収・捕捉月　＝　年金特徴回付情報（介護継承）. 捕捉月
        AND     通知内容コード　IN　(UE特徴分配.Enum.通知内容コード.特別徴収対象者情報, UE特徴分配.Enum.通知内容コード.特別徴収追加候補者情報)
        AND     年金特徴回付情報（介護継承）. 処理年度　＝　入力．調定年度　－１


    </update>
    <select id="select全ての賦課情報"
            resultType="jp.co.ndensan.reams.db.dbb.entity.TokuchoHeijunka6gatsuTsuchishoIkkatsuHakko_sqlresultEntity"
            parameterType="jp.co.ndensan.reams.db.dbb.entity.TokuchoHeijunka6gatsuTsuchishoIkkatsuHakko_sqlparamEntity" fetchSize="500">
        SELECT 		全項目
        FROM		賦課Newest
        (	SELECT 　賦課情報前年度．調定年度,
        賦課情報前年度．被保険者番号,　
        MAX(賦課情報前年度．通知書番号)　AS 通知書番号
        FROM  賦課Newest　AS 賦課情報MAX通知書
        (   SELECT 　MAX(調定年度） as 調定年度, 被保険者番号
        FROM  賦課Newest
        WHERE  賦課年度　＝　入力．調定年度　－　1
        GROUP BY  被保険者番号
        )   AS  A
        WHERE 		賦課情報MAX通知書．調定年度　＝　A.調定年度　
        AND	賦課情報MAX通知書．賦課年度　＝　入力．調定年度　－　1
        AND	賦課情報MAX通知書．被保険者番号　＝　A.被保険者番号
        GROUP BY  調定年度,被保険者番号
        )  AS  B
        WHERE 		賦課Newest.調定年度　＝B.調定年度
        AND	賦課Newest.賦課年度　＝入力．調定年度　－　1
        AND	賦課Newest.通知書番号　＝Ｂ.通知書番号
        AND	賦課Newest.被保険者番号　＝Ｂ.被保険者番号



    </select>
    <update id="update前年度特徴期別金額06"
            resultType="jp.co.ndensan.reams.db.dbb.entity.TokuchoHeijunka6gatsuTsuchishoIkkatsuHakko_sqlresultEntity"
            parameterType="jp.co.ndensan.reams.db.dbb.entity.TokuchoHeijunka6gatsuTsuchishoIkkatsuHakko_sqlparamEntity" fetchSize="500">
        UPDATE 		仮算定額変更情報一時テーブル
        SET		前年度・特徴期別金額06　＝　（　SELECT 調定共通（介護継承）．調定額
        FROM  前年度賦課情報一時テーブル　　AS 前年度賦課
        INNER JOIN  介護期別
        ON   介護期別．調定年度　＝　前年度賦課．調定年度
        AND  介護期別．賦課年度　＝　前年度賦課．調定賦課
        AND  介護期別．通知書番号　＝　前年度賦課．通知書番号
        AND  介護期別．履歴番号　＝　前年度賦課．履歴番号
        AND  介護期別．期　＝　「6」
        AND  介護期別．徴収方法　＝DBB介護賦課．Enum．徴収方法期別．特別徴収
        INNER JOIN  調定共通（介護継承）
        ON   調定共通（介護継承）．調定ID　＝　介護期別．調定ID
        WHERE   前年度賦課.被保険者番号　　＝　仮算定額変更情報一時テーブル.「更正後」計算後情報．被保険者番号
        )



    </update>
    <update id="update継続の被保険者区分"
            resultType="jp.co.ndensan.reams.db.dbb.entity.TokuchoHeijunka6gatsuTsuchishoIkkatsuHakko_sqlresultEntity"
            parameterType="jp.co.ndensan.reams.db.dbb.entity.TokuchoHeijunka6gatsuTsuchishoIkkatsuHakko_sqlparamEntity" fetchSize="500">
        UPDATE 		仮算定額変更情報一時テーブル
        SET		被保険者区分　＝　０：継続
        WHERE 		「更正後」計算後情報．徴収方法4月 IN (DBB介護賦課.Enum.徴収方法.特別徴収（厚生労働省）, DBB介護賦課.Enum.徴収方法.特別徴収（地共済）)
        AND	前年度・特徴期別金額06　　≠　０




    </update>
    <update id="update4月開始の被保険者区分"
            resultType="jp.co.ndensan.reams.db.dbb.entity.TokuchoHeijunka6gatsuTsuchishoIkkatsuHakko_sqlresultEntity"
            parameterType="jp.co.ndensan.reams.db.dbb.entity.TokuchoHeijunka6gatsuTsuchishoIkkatsuHakko_sqlparamEntity" fetchSize="500">
        UPDATE 		仮算定額変更情報一時テーブル
        SET		被保険者区分　＝　１：4月開始
        WHERE 		「更正後」計算後情報．徴収方法4月 IN (DBB介護賦課.Enum.徴収方法.特別徴収（厚生労働省）, DBB介護賦課.Enum.徴収方法.特別徴収（地共済）)
        AND	前年度・特徴期別金額06　　＝　０



    </update>
    <update id="update6月開始の被保険者区分"
            resultType="jp.co.ndensan.reams.db.dbb.entity.TokuchoHeijunka6gatsuTsuchishoIkkatsuHakko_sqlresultEntity"
            parameterType="jp.co.ndensan.reams.db.dbb.entity.TokuchoHeijunka6gatsuTsuchishoIkkatsuHakko_sqlparamEntity" fetchSize="500">
        UPDATE 		仮算定額変更情報一時テーブル
        SET		被保険者区分　＝　2：6月開始
        WHERE 		(「更正後」計算後情報．徴収方法4月　≠　DBB介護賦課.Enum.徴収方法.特別徴収（厚生労働省）
        AND	「更正後」計算後情報．徴収方法4月　≠　　DBB介護賦課.Enum.徴収方法.特別徴収（地共済） )
        AND	(「更正後」計算後情報．徴収方法6月　＝　DBB介護賦課.Enum.徴収方法.特別徴収（厚生労働省）　　
        OR	「更正後」計算後情報．徴収方法6月　＝　DBB介護賦課.Enum.徴収方法.特別徴収（地共済） )



    </update>
    <insert id="insert入力の出力対象区分によって"
            resultType="jp.co.ndensan.reams.db.dbb.entity.TokuchoHeijunka6gatsuTsuchishoIkkatsuHakko_sqlresultEntity"
            parameterType="jp.co.ndensan.reams.db.dbb.entity.TokuchoHeijunka6gatsuTsuchishoIkkatsuHakko_sqlparamEntity" fetchSize="500">
        INSERT  INTO  通知書発行後異動者 (帳票ID, 帳票作成日時, 賦課年度,通知書番号, 識別コード, 被保険者番号, 計算処理日時, 該当連番, 異動ありフラグ)
        SELECT 		入力．帳票ID
        入力．帳票作成日時
        賦課年度
        被保険者番号
        識別コード
        調定日時
        ROWNUM
        FALSE
        FROM		仮算定額変更情報一時テーブル
        WHERE条件は、入力．出力対象区分によって、追加する。
        ・　入力．出力対象区分　＝DBB.Enum.HeijunkaHenkoOutputJoken（平準化変更通知書出力条件）．全件（追加候補者含む）の場合
        条件なし、全てのデータを抽出する。

        ・　入力．出力対象区分　＝DBB.Enum.HeijunkaHenkoOutputJoken（平準化変更通知書出力条件）．全件（追加候補者含まない）の場合
        被保険者区分　=  0：継続

        ・　入力．出力対象区分　＝DBB.Enum.HeijunkaHenkoOutputJoken（平準化変更通知書出力条件）．追加候補者のみ全ての場合
        被保険者区分　=  １：4月開始　or  被保険者区分　=  2：6月開始

        ORDER BY   上記１で取得された出力順


    </insert>
    <insert id="insert入力の出力対象区分によって"
            resultType="jp.co.ndensan.reams.db.dbb.entity.TokuchoHeijunka6gatsuTsuchishoIkkatsuHakko_sqlresultEntity"
            parameterType="jp.co.ndensan.reams.db.dbb.entity.TokuchoHeijunka6gatsuTsuchishoIkkatsuHakko_sqlparamEntity" fetchSize="500">
        INSERT  INTO  rgdb."DbT2017TsuchishoHakkogoIdosha" ("hohyoBunruiID", "chohyosakuseiTimestamp",
        "tsuchishoNo","shikibetsuCode", "hihokenshaNo",
        "keisanTimestamp", "gaitoRemban", "idoAriFlag")
        SELECT 	#{帳票ID}
        #{帳票作成日時}
        被保険者番号
        識別コード
        調定日時
        ROWNUM
        FALSE
        FROM		仮算定額変更情報一時テーブル
        WHERE条件は、入力．出力対象区分によって、追加する。
        ・　入力．出力対象区分　＝DBB.Enum.HeijunkaHenkoOutputJoken（平準化変更通知書出力条件）．全件（追加候補者含む）の場合
        条件なし、全てのデータを抽出する。

        ・　入力．出力対象区分　＝DBB.Enum.HeijunkaHenkoOutputJoken（平準化変更通知書出力条件）．全件（追加候補者含まない）の場合
        被保険者区分　=  0：継続

        ・　入力．出力対象区分　＝DBB.Enum.HeijunkaHenkoOutputJoken（平準化変更通知書出力条件）．追加候補者のみ全ての場合
        被保険者区分　=  １：4月開始　or  被保険者区分　=  2：6月開始

        ORDER BY   上記１で取得された出力順

    </insert>



    <sql id="allColumns_DbT2015KeisangoJohoTemp">
        "DbT2015KeisangoJohoTemp"."choteiNendo" as "keisangoJohoTemp_choteiNendo",
        "DbT2015KeisangoJohoTemp"."fukaNendo" as "keisangoJohoTemp_fukaNendo",
        "DbT2015KeisangoJohoTemp"."rirekiNo" as "keisangoJohoTemp_rirekiNo",
        "DbT2015KeisangoJohoTemp"."tsuchishoNo" as "keisangoJohoTemp_tsuchishoNo",
        "DbT2015KeisangoJohoTemp"."koseiZengoKubun" as "keisangoJohoTemp_koseiZengoKubun",
        "DbT2015KeisangoJohoTemp"."sakuseiShoriName" as "keisangoJohoTemp_sakuseiShoriName",
        "DbT2015KeisangoJohoTemp"."fukaRirekiNo" as "keisangoJohoTemp_fukaRirekiNo",
        "DbT2015KeisangoJohoTemp"."hihokenshaNo" as "keisangoJohoTemp_hihokenshaNo",
        "DbT2015KeisangoJohoTemp"."shikibetsuCode" as "keisangoJohoTemp_shikibetsuCode",
        "DbT2015KeisangoJohoTemp"."setaiCode" as "keisangoJohoTemp_setaiCode",
        "DbT2015KeisangoJohoTemp"."setaiInsu" as "keisangoJohoTemp_setaiInsu",
        "DbT2015KeisangoJohoTemp"."shikakuShutokuYMD" as "keisangoJohoTemp_shikakuShutokuYMD",
        "DbT2015KeisangoJohoTemp"."shikakuShutokuJiyu" as "keisangoJohoTemp_shikakuShutokuJiyu",
        "DbT2015KeisangoJohoTemp"."shikakuSoshitsuYMD" as "keisangoJohoTemp_shikakuSoshitsuYMD",
        "DbT2015KeisangoJohoTemp"."shikakuSoshitsuJiyu" as "keisangoJohoTemp_shikakuSoshitsuJiyu",
        "DbT2015KeisangoJohoTemp"."seihofujoShurui" as "keisangoJohoTemp_seihofujoShurui",
        "DbT2015KeisangoJohoTemp"."seihoKaishiYMD" as "keisangoJohoTemp_seihofujoShurui",
        "DbT2015KeisangoJohoTemp"."seihoHaishiYMD" as "keisangoJohoTemp_seihoHaishiYMD",
        "DbT2015KeisangoJohoTemp"."ronenKaishiYMD" as "keisangoJohoTemp_ronenKaishiYMD",
        "DbT2015KeisangoJohoTemp"."ronenHaishiYMD" as "keisangoJohoTemp_ronenHaishiYMD",
        "DbT2015KeisangoJohoTemp"."fukaYMD" as "keisangoJohoTemp_fukaYMD",
        "DbT2015KeisangoJohoTemp"."kazeiKubun" as "keisangoJohoTemp_kazeiKubun",
        "DbT2015KeisangoJohoTemp"."setaikazeiKubun" as "keisangoJohoTemp_setaikazeiKubun",
        "DbT2015KeisangoJohoTemp"."gokeiShotokuGaku" as "keisangoJohoTemp_gokeiShotokuGaku",
        "DbT2015KeisangoJohoTemp"."nenkinShunyuGaku" as "keisangoJohoTemp_nenkinShunyuGaku",
        "DbT2015KeisangoJohoTemp"."hokenryoDankai" as "keisangoJohoTemp_hokenryoDankai",
        "DbT2015KeisangoJohoTemp"."hokenryoDankai1" as "keisangoJohoTemp_hokenryoDankai1",
        "DbT2015KeisangoJohoTemp"."nengakuHokenryo1" as "keisangoJohoTemp_nengakuHokenryo1",
        "DbT2015KeisangoJohoTemp"."tsukiwariStartYM1" as "keisangoJohoTemp_tsukiwariStartYM1",
        "DbT2015KeisangoJohoTemp"."tsukiwariEndYM1" as "keisangoJohoTemp_tsukiwariEndYM1",
        "DbT2015KeisangoJohoTemp"."hokenryoDankai2" as "keisangoJohoTemp_hokenryoDankai2",
        "DbT2015KeisangoJohoTemp"."nengakuHokenryo2" as "keisangoJohoTemp_nengakuHokenryo2",
        "DbT2015KeisangoJohoTemp"."tsukiwariStartYM2" as "keisangoJohoTemp_tsukiwariStartYM2",
        "DbT2015KeisangoJohoTemp"."tsukiwariEndYM2" as "keisangoJohoTemp_tsukiwariEndYM2",
        "DbT2015KeisangoJohoTemp"."choteiNichiji" as "keisangoJohoTemp_choteiNichiji",
        "DbT2015KeisangoJohoTemp"."choteiJiyu1" as "keisangoJohoTemp_choteiJiyu1",
        "DbT2015KeisangoJohoTemp"."choteiJiyu2" as "keisangoJohoTemp_choteiJiyu2",
        "DbT2015KeisangoJohoTemp"."choteiJiyu3" as "keisangoJohoTemp_choteiJiyu3",
        "DbT2015KeisangoJohoTemp"."choteiJiyu4" as "keisangoJohoTemp_choteiJiyu4",
        "DbT2015KeisangoJohoTemp"."koseiM" as "keisangoJohoTemp_koseiM",
        "DbT2015KeisangoJohoTemp"."gemmenMaeHokenryo" as "keisangoJohoTemp_gemmenMaeHokenryo",
        "DbT2015KeisangoJohoTemp"."gemmenGaku" as "keisangoJohoTemp_gemmenGaku",
        "DbT2015KeisangoJohoTemp"."kakuteiHokenryo" as "keisangoJohoTemp_kakuteiHokenryo",
        "DbT2015KeisangoJohoTemp"."hokenryoDankaiKarisanntei" as "keisangoJohoTemp_hokenryoDankaiKarisanntei",
        "DbT2015KeisangoJohoTemp"."choshuHohoRirekiNo" as "keisangoJohoTemp_choshuHohoRirekiNo",
        "DbT2015KeisangoJohoTemp"."idoKijunNichiji" as "keisangoJohoTemp_idoKijunNichiji",
        "DbT2015KeisangoJohoTemp"."kozaKubun" as "keisangoJohoTemp_kozaKubun",
        "DbT2015KeisangoJohoTemp"."kyokaisoKubun" as "keisangoJohoTemp_kyokaisoKubun",
        "DbT2015KeisangoJohoTemp"."shokkenKubun" as "keisangoJohoTemp_shokkenKubun",
        "DbT2015KeisangoJohoTemp"."fukaShichosonCode as "keisangoJohoTemp_fukaShichosonCode",
        "DbT2015KeisangoJohoTemp"."tkSaishutsuKampuGaku" as "keisangoJohoTemp_tkSaishutsuKampuGaku",
        "DbT2015KeisangoJohoTemp"."fuSaishutsuKampuGaku" as "keisangoJohoTemp_fuSaishutsuKampuGaku",
        "DbT2015KeisangoJohoTemp"."tkKibetsuGaku01" as "keisangoJohoTemp_tkKibetsuGaku01",
        "DbT2015KeisangoJohoTemp"."tkKibetsuGaku02" as "keisangoJohoTemp_tkKibetsuGaku02",
        "DbT2015KeisangoJohoTemp"."tkKibetsuGaku03" as "keisangoJohoTemp_tkKibetsuGaku03",
        "DbT2015KeisangoJohoTemp"."tkKibetsuGaku04" as "keisangoJohoTemp_tkKibetsuGaku04",
        "DbT2015KeisangoJohoTemp"."tkKibetsuGaku05" as "keisangoJohoTemp_tkKibetsuGaku05",
        "DbT2015KeisangoJohoTemp"."tkKibetsuGaku06" as "keisangoJohoTemp_tkKibetsuGaku06",
        "DbT2015KeisangoJohoTemp"."fuKibetsuGaku01" as "keisangoJohoTemp_fuKibetsuGaku01",
        "DbT2015KeisangoJohoTemp"."fuKibetsuGaku02" as "keisangoJohoTemp_fuKibetsuGaku02",
        "DbT2015KeisangoJohoTemp"."fuKibetsuGaku03" as "keisangoJohoTemp_fuKibetsuGaku03",
        "DbT2015KeisangoJohoTemp"."fuKibetsuGaku04" as "keisangoJohoTemp_fuKibetsuGaku04",
        "DbT2015KeisangoJohoTemp"."fuKibetsuGaku05" as "keisangoJohoTemp_fuKibetsuGaku05",
        "DbT2015KeisangoJohoTemp"."fuKibetsuGaku06" as "keisangoJohoTemp_fuKibetsuGaku06",
        "DbT2015KeisangoJohoTemp"."fuKibetsuGaku07" as "keisangoJohoTemp_fuKibetsuGaku07",
        "DbT2015KeisangoJohoTemp"."fuKibetsuGaku08" as "keisangoJohoTemp_fuKibetsuGaku08",
        "DbT2015KeisangoJohoTemp"."fuKibetsuGaku09" as "keisangoJohoTemp_fuKibetsuGaku09",
        "DbT2015KeisangoJohoTemp"."fuKibetsuGaku10" as "keisangoJohoTemp_fuKibetsuGaku10",
        "DbT2015KeisangoJohoTemp"."fuKibetsuGaku11" as "keisangoJohoTemp_fuKibetsuGaku11",
        "DbT2015KeisangoJohoTemp"."fuKibetsuGaku12" as "keisangoJohoTemp_fuKibetsuGaku12",
        "DbT2015KeisangoJohoTemp"."fuKibetsuGaku13" as "keisangoJohoTemp_fuKibetsuGaku13",
        "DbT2015KeisangoJohoTemp"."fuKibetsuGaku14" as "keisangoJohoTemp_fuKibetsuGaku14",
        "DbT2015KeisangoJohoTemp"."choshuHoho4gatsu" as "keisangoJohoTemp_choshuHoho4gatsu",
        "DbT2015KeisangoJohoTemp"."choshuHoho5gatsu" as "keisangoJohoTemp_choshuHoho5gatsu",
        "DbT2015KeisangoJohoTemp"."choshuHoho6gatsu" as "keisangoJohoTemp_choshuHoho6gatsu",
        "DbT2015KeisangoJohoTemp"."choshuHoho7gatsu" as "keisangoJohoTemp_choshuHoho7gatsu",
        "DbT2015KeisangoJohoTemp"."choshuHoho8gatsu" as "keisangoJohoTemp_choshuHoho8gatsu",
        "DbT2015KeisangoJohoTemp"."choshuHoho9gatsu" as "keisangoJohoTemp_choshuHoho9gatsu",
        "DbT2015KeisangoJohoTemp"."choshuHoho10gatsu" as "keisangoJohoTemp_choshuHoho10gatsu",
        "DbT2015KeisangoJohoTemp"."choshuHoho11gatsu" as "keisangoJohoTemp_choshuHoho11gatsu",
        "DbT2015KeisangoJohoTemp"."choshuHoho12gatsu" as "keisangoJohoTemp_choshuHoho12gatsu",
        "DbT2015KeisangoJohoTemp"."choshuHoho1gatsu" as "keisangoJohoTemp_choshuHoho1gatsu",
        "DbT2015KeisangoJohoTemp"."choshuHoho2gatsu" as "keisangoJohoTemp_choshuHoho2gatsu",
        "DbT2015KeisangoJohoTemp"."choshuHoho3gatsu" as "keisangoJohoTemp_choshuHoho3gatsu",
        "DbT2015KeisangoJohoTemp"."choshuHohoYoku4gatsu" as "keisangoJohoTemp_choshuHohoYoku4gatsu",
        "DbT2015KeisangoJohoTemp"."choshuHohoYoku5gatsu" as "keisangoJohoTemp_choshuHohoYoku5gatsu",
        "DbT2015KeisangoJohoTemp"."choshuHohoYoku6gatsu" as "keisangoJohoTemp_choshuHohoYoku6gatsu",
        "DbT2015KeisangoJohoTemp"."choshuHohoYoku7gatsu" as "keisangoJohoTemp_choshuHohoYoku7gatsu",
        "DbT2015KeisangoJohoTemp"."choshuHohoYoku8gatsu" as "keisangoJohoTemp_choshuHohoYoku8gatsu",
        "DbT2015KeisangoJohoTemp"."choshuHohoYoku9gatsu" as "keisangoJohoTemp_choshuHohoYoku9gatsu",
        "DbT2015KeisangoJohoTemp"."kariNenkinNo" as "keisangoJohoTemp_kariNenkinNo",
        "DbT2015KeisangoJohoTemp"."kariNenkinCode" as "keisangoJohoTemp_kariNenkinCode",
        "DbT2015KeisangoJohoTemp"."kariHosokuM" as "keisangoJohoTemp_kariHosokuM",
        "DbT2015KeisangoJohoTemp"."honNenkinNo" as "keisangoJohoTemp_honNenkinNo",
        "DbT2015KeisangoJohoTemp"."honNenkinCode" as "keisangoJohoTemp_honNenkinCode",
        "DbT2015KeisangoJohoTemp"."honHosokuM" as "keisangoJohoTemp_honHosokuM",
        "DbT2015KeisangoJohoTemp"."yokunendoKariNenkinNo" as "keisangoJohoTemp_yokunendoKariNenkinNo",
        "DbT2015KeisangoJohoTemp"."yokunendoKariNenkinCode" as "keisangoJohoTemp_yokunendoKariNenkinCode",
        "DbT2015KeisangoJohoTemp"."yokunendoKariHosokuM" as "keisangoJohoTemp_yokunendoKariHosokuM",
        "DbT2015KeisangoJohoTemp"."iraiSohuzumiFlag" as "keisangoJohoTemp_iraiSohuzumiFlag",
        "DbT2015KeisangoJohoTemp"."tsuikaIraiSohuzumiFlag" as "keisangoJohoTemp_tsuikaIraiSohuzumiFlag",
        "DbT2015KeisangoJohoTemp"."tokuchoTeishiNichiji" as "keisangoJohoTemp_tokuchoTeishiNichiji",
        "DbT2015KeisangoJohoTemp"."tokuchoTeishiJiyuCode" as "keisangoJohoTemp_tokuchoTeishiJiyuCode",
        "DbT2015KeisangoJohoTemp"."tkShunyuGaku01" as "keisangoJohoTemp_tkShunyuGaku01",
        "DbT2015KeisangoJohoTemp"."tkShunyuGaku02" as "keisangoJohoTemp_tkShunyuGaku02",
        "DbT2015KeisangoJohoTemp"."tkShunyuGaku03" as "keisangoJohoTemp_tkShunyuGaku03",
        "DbT2015KeisangoJohoTemp"."tkShunyuGaku04" as "keisangoJohoTemp_tkShunyuGaku04",
        "DbT2015KeisangoJohoTemp"."tkShunyuGaku05" as "keisangoJohoTemp_tkShunyuGaku05",
        "DbT2015KeisangoJohoTemp"."tkShunyuGaku06" as "keisangoJohoTemp_tkShunyuGaku06",
        "DbT2015KeisangoJohoTemp"."fuShunyuGaku01" as "keisangoJohoTemp_fuShunyuGaku01",
        "DbT2015KeisangoJohoTemp"."fuShunyuGaku02" as "keisangoJohoTemp_fuShunyuGaku02",
        "DbT2015KeisangoJohoTemp"."fuShunyuGaku03" as "keisangoJohoTemp_fuShunyuGaku03",
        "DbT2015KeisangoJohoTemp"."fuShunyuGaku04" as "keisangoJohoTemp_fuShunyuGaku04",
        "DbT2015KeisangoJohoTemp"."fuShunyuGaku05" as "keisangoJohoTemp_fuShunyuGaku05",
        "DbT2015KeisangoJohoTemp"."fuShunyuGaku06" as "keisangoJohoTemp_fuShunyuGaku06",
        "DbT2015KeisangoJohoTemp"."fuShunyuGaku07" as "keisangoJohoTemp_fuShunyuGaku07",
        "DbT2015KeisangoJohoTemp"."fuShunyuGaku08" as "keisangoJohoTemp_fuShunyuGaku08",
        "DbT2015KeisangoJohoTemp"."fuShunyuGaku09" as "keisangoJohoTemp_fuShunyuGaku09",
        "DbT2015KeisangoJohoTemp"."fuShunyuGaku10" as "keisangoJohoTemp_fuShunyuGaku10",
        "DbT2015KeisangoJohoTemp"."fuShunyuGaku11" as "keisangoJohoTemp_fuShunyuGaku11",
        "DbT2015KeisangoJohoTemp"."fuShunyuGaku12" as "keisangoJohoTemp_fuShunyuGaku12",
        "DbT2015KeisangoJohoTemp"."fuShunyuGaku13" as "keisangoJohoTemp_fuShunyuGaku13",
        "DbT2015KeisangoJohoTemp"."fuShunyuGaku14" as "keisangoJohoTemp_fuShunyuGaku14"
    </sql>

</mapper>
