package jp.co.ndensan.reams.db.dbd.definition.enumeratedtype.core;

import jp.co.ndensan.reams.ur.urz.definition.message.UrSystemErrorMessages;
import jp.co.ndensan.reams.uz.uza.lang.RString;

/**
 * データ区分を表す列挙型です。
 *
 * @reamsid_L DBD-9999-023 liangbc
 */
public enum Datakubun {

    /**
     * コード:00 名称:通常（認定） 略称:定義なし
     */
    通常_認定("00", "通常（認定）"),
    /**
     * コード:11 名称:職権による認定取消 略称:定義なし
     */
    職権による認定取消("11", "職権による認定取消"),
    /**
     * コード:12 名称:審査会結果による認定取消 略称:定義なし
     */
    審査会結果による認定取消("12", "審査会結果による認定取消"),
    /**
     * コード:13 名称:本人届出・サ利用無による取消 略称:定義なし
     */
    本人届出_サ利用無による取消("13", "本人届出・サ利用無による取消"),
    /**
     * コード:14 名称:本人届出・その他による取消 略称:定義なし
     */
    本人届出_その他による取消("14", "本人届出・その他による取消"),
    /**
     * コード:15 名称:要介護度3段階低下による取消 略称:定義なし
     */
    要介護度3段階低下による取消("15", "要介護度3段階低下による取消"),
    /**
     * コード:19 名称:その他の理由による認定取消 略称:定義なし
     */
    その他の理由による認定取消("19", "その他の理由による認定取消"),
    /**
     * コード:21 名称:受給者転入 略称:定義なし
     */
    受給者転入("21", "受給者転入"),
    /**
     * コード:22 名称:過誤による追加 略称:定義なし
     */
    過誤による追加("22", "過誤による追加"),
    /**
     * コード:23 名称:やむを得ない理由による追加 略称:定義なし
     */
    やむを得ない理由による追加("23", "やむを得ない理由による追加"),
    /**
     * コード:24 名称:職権による追加（修正） 略称:定義なし
     */
    職権による追加_修正("24", "職権による追加（修正）"),
    /**
     * コード:25 名称:要介護度3段階低下による追加 略称:定義なし
     */
    要介護度3段階低下による追加("25", "要介護度3段階低下による追加"),
    /**
     * コード:29 名称:その他の理由による追加 略称:定義なし
     */
    その他の理由による追加("29", "その他の理由による追加"),
    /**
     * コード:31 名称:要介護度の変更無しによる却下 略称:定義なし
     */
    要介護度の変更無しによる却下("31", "要介護度の変更無しによる却下"),
    /**
     * コード:32 名称:自立による却下 略称:定義なし
     */
    自立による却下("32", "自立による却下"),
    /**
     * コード:33 名称:訪問調査未実施による却下 略称:定義なし
     */
    訪問調査未実施による却下("33", "訪問調査未実施による却下"),
    /**
     * コード:34 名称:意見書未実施による却下 略称:定義なし
     */
    意見書未実施による却下("34", "意見書未実施による却下"),
    /**
     * コード:35 名称:審査会都合による却下 略称:定義なし
     */
    審査会都合による却下("35", "審査会都合による却下"),
    /**
     * コード:36 名称:要介護度3段階低下による却下 略称:定義なし
     */
    要介護度3段階低下による却下("36", "要介護度3段階低下による却下"),
    /**
     * コード:37 名称:職権による却下 略称:定義なし
     */
    職権による却下("37", "職権による却下"),
    /**
     * コード:39 名称:その他の理由による却下 略称:定義なし
     */
    その他の理由による却下("39", "その他の理由による却下"),
    /**
     * コード:41 名称:過誤による申請取消 略称:定義なし
     */
    過誤による申請取消("41", "過誤による申請取消"),
    /**
     * コード:42 名称:申請による申請取消 略称:定義なし
     */
    申請による申請取消("42", "申請による申請取消"),
    /**
     * コード:43 名称:転出による申請取消 略称:定義なし
     */
    転出による申請取消("43", "転出による申請取消"),
    /**
     * コード:44 名称:死亡による申請取消 略称:定義なし
     */
    死亡による申請取消("44", "死亡による申請取消"),
    /**
     * コード:45 名称:職権による申請取消 略称:定義なし
     */
    職権による申請取消("45", "職権による申請取消"),
    /**
     * コード:49 名称:その他の理由による申請取消 略称:定義なし
     */
    その他の理由による申請取消("49", "その他の理由による申請取消"),
    /**
     * コード:91 名称:開始日同日の区分変更前情報 略称:定義なし
     */
    開始日同日の区分変更前情報("91", "開始日同日の区分変更前情報");

    private final RString code;
    private final RString fullName;

    private Datakubun(String code, String fullname) {
        this.code = new RString(code);
        this.fullName = new RString(fullname);
    }

    /**
     * データ区分のコードを返します。
     *
     * @return データ区分のコード
     */
    public RString getコード() {
        return code;
    }

    /**
     * データ区分の名称を返します。
     *
     * @return データ区分の名称
     */
    public RString get名称() {
        return fullName;
    }

    /**
     * データ区分のコードと一致する内容を探します。
     *
     * @param code データ区分のコード
     * @return {@code code} に対応するデータ区分
     */
    public static Datakubun toValue(RString code) {

        for (Datakubun datakubun : Datakubun.values()) {
            if (datakubun.code.equals(code)) {
                return datakubun;
            }
        }
        throw new IllegalArgumentException(UrSystemErrorMessages.変換不可.getReplacedMessage("データ区分"));
    }
}
